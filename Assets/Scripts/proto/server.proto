syntax = "proto3";

option go_package = ".;rpc";

package Gardarike;

service GameServer {
  // Returns the map around the specific location
  rpc GetNearMap(GetMapRequest) returns (GetMapResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc SelectCharacter(SelectCharacterRequest) returns (SelectCharacterResponse);
  rpc PlaceBuilding(PlaceBuildingRequest) returns (PlaceBuildingResponse);
  rpc SendChatMessage(SendChatMessageRequest) returns (SendChatMessageResponse);
  rpc GetChatHistory(GetChatHistoryRequest) returns (GetChatHistoryResponse);
}

// Requests
message Request {
  oneof data {
    GetMapRequest getMapRequest = 1;
    LoginRequest loginRequest = 2;
    SelectCharacterRequest selectCharacterRequest = 3;
    PlaceBuildingRequest placeBuildingRequest = 4;
    SendChatMessageRequest sendChatMessageRequest = 5;
    GetChatHistoryRequest getChatHistoryRequest = 6;
    GetWorkDistributionRequest getWorkDistributionRequest = 7;
  }
}

message GetWorkDistributionRequest {
  string sessionID = 1;
}

// Get 'count' chat messages starting from some message 'lastMessageID'
// Messages are sorted from newest to oldest
message GetChatHistoryRequest {
  string sessionID = 1;
  int64 offset = 2;
  int64 count = 3;
}

message SendChatMessageRequest {
  string sessionID = 1;
  string text = 2;
}

message PlaceBuildingRequest {
  string sessionID = 1;
  int64 buildingID = 2;
  Vector3D location = 3;
}

message GetMapRequest {
  string sessionID = 1;
  Vector3D location = 2;
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message SelectCharacterRequest {
  string sessionID = 1;
  int32 characterID = 2;
}

// Responses
message Response {
  oneof data {
    ErrorResponse errorResponse = 1;
    GetMapResponse getMapResponse = 2;
    LoginResponse loginResponse = 3;
    MultipartResponse multipartResponse = 4;
    SelectCharacterResponse selectCharacterResponse = 5;
    PlaceBuildingResponse placeBuildingResponse = 6;
    SendChatMessageResponse sendChatMessageResponse = 7;
    GetChatHistoryResponse getChatHistoryResponse = 8;
    ChatMessagePublishResponse chatMessagePublishResponse = 9;
    GetWorkDistributionResponse getWorkDistributionResponse = 10;
  }
}

message GetWorkDistributionResponse {
  int64 idleCount = 1;
  int64 woodcutterCount = 2;
}

message ChatMessagePublishResponse {
}

message GetChatHistoryResponse {
  repeated ChatMessage messages = 1;
}

message SendChatMessageResponse {
  int64 messageID = 1;
}

message PlaceBuildingResponse {

}

// Response indicating start of the multipart response
// Parts field indicating how many subsequent datagram packets
// should be considered as a single response.
message MultipartResponse {
  int64 parts = 1;
}

message LoginResponse {
  string sessionID = 1;
  repeated Character characters = 2;
}

message ErrorResponse {
  string message = 1;
  int64 code = 2;
}

message SelectCharacterResponse {

}

message ChatMessage {
  int64 id = 1;
  string sender = 2;
  string text = 3;
}

message Event {
  oneof payload {
    BuildingPlacedEvent buildingPlacedEvent = 1;
    NewChatMessageEvent chatMessageEvent = 2;
    CharacterUpdatedEvent characterUpdatedEvent = 3;
    ResourceUpdatedEvent resourceUpdatedEvent = 4;
  }
}

message ResourceUpdatedEvent {
  int64 treesCount = 1;
}

message CharacterUpdatedEvent {
  Character newState = 1;
}

message BuildingPlacedEvent {
  int64 buildingID = 1;
  int64 ownerID = 2;
  Vector3D location = 3;
}

message NewChatMessageEvent {
  ChatMessage message = 1;
}

message Vector3D {
  float x = 1;
  float y = 2;
  float z = 3;
}

// Map represents the game map. Map consists of 3D points.
message Map {
  int32 width = 1;
  int32 height = 2;
  repeated float points = 3;
  repeated Building buildings = 4;
  int64 treesCount = 5;
}

message Building {
  int64 id = 1;
  int64 ownerID = 3;
  Vector3D location = 4;
}

message GetMapResponse {
  Map map = 1;
}

message MapChunk {

}

message Vector3 {
}

message Handshake {
  string login = 1;
  string password = 2;
}

message Character {
  int32 id = 1;
  string name = 2;
  uint64 gold = 3;
  uint64 maxPopulation = 4;
  uint64 currentPopulation = 5;
}
