// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Gardarike {

  /// <summary>Holder for reflection information generated from server.proto</summary>
  public static partial class ServerReflection {

    #region Descriptor
    /// <summary>File descriptor for server.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzZXJ2ZXIucHJvdG8SCUdhcmRhcmlrZSLQAwoHUmVxdWVzdBIxCg1nZXRN",
            "YXBSZXF1ZXN0GAEgASgLMhguR2FyZGFyaWtlLkdldE1hcFJlcXVlc3RIABIv",
            "Cgxsb2dpblJlcXVlc3QYAiABKAsyFy5HYXJkYXJpa2UuTG9naW5SZXF1ZXN0",
            "SAASQwoWc2VsZWN0Q2hhcmFjdGVyUmVxdWVzdBgDIAEoCzIhLkdhcmRhcmlr",
            "ZS5TZWxlY3RDaGFyYWN0ZXJSZXF1ZXN0SAASPwoUcGxhY2VCdWlsZGluZ1Jl",
            "cXVlc3QYBCABKAsyHy5HYXJkYXJpa2UuUGxhY2VCdWlsZGluZ1JlcXVlc3RI",
            "ABJDChZzZW5kQ2hhdE1lc3NhZ2VSZXF1ZXN0GAUgASgLMiEuR2FyZGFyaWtl",
            "LlNlbmRDaGF0TWVzc2FnZVJlcXVlc3RIABJBChVnZXRDaGF0SGlzdG9yeVJl",
            "cXVlc3QYBiABKAsyIC5HYXJkYXJpa2UuR2V0Q2hhdEhpc3RvcnlSZXF1ZXN0",
            "SAASSwoaZ2V0V29ya0Rpc3RyaWJ1dGlvblJlcXVlc3QYByABKAsyJS5HYXJk",
            "YXJpa2UuR2V0V29ya0Rpc3RyaWJ1dGlvblJlcXVlc3RIAEIGCgRkYXRhIi8K",
            "GkdldFdvcmtEaXN0cmlidXRpb25SZXF1ZXN0EhEKCXNlc3Npb25JRBgBIAEo",
            "CSJJChVHZXRDaGF0SGlzdG9yeVJlcXVlc3QSEQoJc2Vzc2lvbklEGAEgASgJ",
            "Eg4KBm9mZnNldBgCIAEoAxINCgVjb3VudBgDIAEoAyI5ChZTZW5kQ2hhdE1l",
            "c3NhZ2VSZXF1ZXN0EhEKCXNlc3Npb25JRBgBIAEoCRIMCgR0ZXh0GAIgASgJ",
            "ImQKFFBsYWNlQnVpbGRpbmdSZXF1ZXN0EhEKCXNlc3Npb25JRBgBIAEoCRIS",
            "CgpidWlsZGluZ0lEGAIgASgDEiUKCGxvY2F0aW9uGAMgASgLMhMuR2FyZGFy",
            "aWtlLlZlY3RvcjNEIkkKDUdldE1hcFJlcXVlc3QSEQoJc2Vzc2lvbklEGAEg",
            "ASgJEiUKCGxvY2F0aW9uGAIgASgLMhMuR2FyZGFyaWtlLlZlY3RvcjNEIjIK",
            "DExvZ2luUmVxdWVzdBIQCgh1c2VybmFtZRgBIAEoCRIQCghwYXNzd29yZBgC",
            "IAEoCSJAChZTZWxlY3RDaGFyYWN0ZXJSZXF1ZXN0EhEKCXNlc3Npb25JRBgB",
            "IAEoCRITCgtjaGFyYWN0ZXJJRBgCIAEoBSKaBQoIUmVzcG9uc2USMQoNZXJy",
            "b3JSZXNwb25zZRgBIAEoCzIYLkdhcmRhcmlrZS5FcnJvclJlc3BvbnNlSAAS",
            "MwoOZ2V0TWFwUmVzcG9uc2UYAiABKAsyGS5HYXJkYXJpa2UuR2V0TWFwUmVz",
            "cG9uc2VIABIxCg1sb2dpblJlc3BvbnNlGAMgASgLMhguR2FyZGFyaWtlLkxv",
            "Z2luUmVzcG9uc2VIABI5ChFtdWx0aXBhcnRSZXNwb25zZRgEIAEoCzIcLkdh",
            "cmRhcmlrZS5NdWx0aXBhcnRSZXNwb25zZUgAEkUKF3NlbGVjdENoYXJhY3Rl",
            "clJlc3BvbnNlGAUgASgLMiIuR2FyZGFyaWtlLlNlbGVjdENoYXJhY3RlclJl",
            "c3BvbnNlSAASQQoVcGxhY2VCdWlsZGluZ1Jlc3BvbnNlGAYgASgLMiAuR2Fy",
            "ZGFyaWtlLlBsYWNlQnVpbGRpbmdSZXNwb25zZUgAEkUKF3NlbmRDaGF0TWVz",
            "c2FnZVJlc3BvbnNlGAcgASgLMiIuR2FyZGFyaWtlLlNlbmRDaGF0TWVzc2Fn",
            "ZVJlc3BvbnNlSAASQwoWZ2V0Q2hhdEhpc3RvcnlSZXNwb25zZRgIIAEoCzIh",
            "LkdhcmRhcmlrZS5HZXRDaGF0SGlzdG9yeVJlc3BvbnNlSAASSwoaY2hhdE1l",
            "c3NhZ2VQdWJsaXNoUmVzcG9uc2UYCSABKAsyJS5HYXJkYXJpa2UuQ2hhdE1l",
            "c3NhZ2VQdWJsaXNoUmVzcG9uc2VIABJNChtnZXRXb3JrRGlzdHJpYnV0aW9u",
            "UmVzcG9uc2UYCiABKAsyJi5HYXJkYXJpa2UuR2V0V29ya0Rpc3RyaWJ1dGlv",
            "blJlc3BvbnNlSABCBgoEZGF0YSJJChtHZXRXb3JrRGlzdHJpYnV0aW9uUmVz",
            "cG9uc2USEQoJaWRsZUNvdW50GAEgASgDEhcKD3dvb2RjdXR0ZXJDb3VudBgC",
            "IAEoAyIcChpDaGF0TWVzc2FnZVB1Ymxpc2hSZXNwb25zZSJCChZHZXRDaGF0",
            "SGlzdG9yeVJlc3BvbnNlEigKCG1lc3NhZ2VzGAEgAygLMhYuR2FyZGFyaWtl",
            "LkNoYXRNZXNzYWdlIiwKF1NlbmRDaGF0TWVzc2FnZVJlc3BvbnNlEhEKCW1l",
            "c3NhZ2VJRBgBIAEoAyIXChVQbGFjZUJ1aWxkaW5nUmVzcG9uc2UiIgoRTXVs",
            "dGlwYXJ0UmVzcG9uc2USDQoFcGFydHMYASABKAMiTAoNTG9naW5SZXNwb25z",
            "ZRIRCglzZXNzaW9uSUQYASABKAkSKAoKY2hhcmFjdGVycxgCIAMoCzIULkdh",
            "cmRhcmlrZS5DaGFyYWN0ZXIiLgoNRXJyb3JSZXNwb25zZRIPCgdtZXNzYWdl",
            "GAEgASgJEgwKBGNvZGUYAiABKAMiGQoXU2VsZWN0Q2hhcmFjdGVyUmVzcG9u",
            "c2UiNwoLQ2hhdE1lc3NhZ2USCgoCaWQYASABKAMSDgoGc2VuZGVyGAIgASgJ",
            "EgwKBHRleHQYAyABKAkikQIKBUV2ZW50Ej0KE2J1aWxkaW5nUGxhY2VkRXZl",
            "bnQYASABKAsyHi5HYXJkYXJpa2UuQnVpbGRpbmdQbGFjZWRFdmVudEgAEjoK",
            "EGNoYXRNZXNzYWdlRXZlbnQYAiABKAsyHi5HYXJkYXJpa2UuTmV3Q2hhdE1l",
            "c3NhZ2VFdmVudEgAEkEKFWNoYXJhY3RlclVwZGF0ZWRFdmVudBgDIAEoCzIg",
            "LkdhcmRhcmlrZS5DaGFyYWN0ZXJVcGRhdGVkRXZlbnRIABI/ChRyZXNvdXJj",
            "ZVVwZGF0ZWRFdmVudBgEIAEoCzIfLkdhcmRhcmlrZS5SZXNvdXJjZVVwZGF0",
            "ZWRFdmVudEgAQgkKB3BheWxvYWQiKgoUUmVzb3VyY2VVcGRhdGVkRXZlbnQS",
            "EgoKdHJlZXNDb3VudBgBIAEoAyI/ChVDaGFyYWN0ZXJVcGRhdGVkRXZlbnQS",
            "JgoIbmV3U3RhdGUYASABKAsyFC5HYXJkYXJpa2UuQ2hhcmFjdGVyImEKE0J1",
            "aWxkaW5nUGxhY2VkRXZlbnQSEgoKYnVpbGRpbmdJRBgBIAEoAxIPCgdvd25l",
            "cklEGAIgASgDEiUKCGxvY2F0aW9uGAMgASgLMhMuR2FyZGFyaWtlLlZlY3Rv",
            "cjNEIj4KE05ld0NoYXRNZXNzYWdlRXZlbnQSJwoHbWVzc2FnZRgBIAEoCzIW",
            "LkdhcmRhcmlrZS5DaGF0TWVzc2FnZSIrCghWZWN0b3IzRBIJCgF4GAEgASgC",
            "EgkKAXkYAiABKAISCQoBehgDIAEoAiJwCgNNYXASDQoFd2lkdGgYASABKAUS",
            "DgoGaGVpZ2h0GAIgASgFEg4KBnBvaW50cxgDIAMoAhImCglidWlsZGluZ3MY",
            "BCADKAsyEy5HYXJkYXJpa2UuQnVpbGRpbmcSEgoKdHJlZXNDb3VudBgFIAEo",
            "AyJOCghCdWlsZGluZxIKCgJpZBgBIAEoAxIPCgdvd25lcklEGAMgASgDEiUK",
            "CGxvY2F0aW9uGAQgASgLMhMuR2FyZGFyaWtlLlZlY3RvcjNEIi0KDkdldE1h",
            "cFJlc3BvbnNlEhsKA21hcBgBIAEoCzIOLkdhcmRhcmlrZS5NYXAiCgoITWFw",
            "Q2h1bmsiCQoHVmVjdG9yMyIsCglIYW5kc2hha2USDQoFbG9naW4YASABKAkS",
            "EAoIcGFzc3dvcmQYAiABKAkiZQoJQ2hhcmFjdGVyEgoKAmlkGAEgASgFEgwK",
            "BG5hbWUYAiABKAkSDAoEZ29sZBgDIAEoBBIVCg1tYXhQb3B1bGF0aW9uGAQg",
            "ASgEEhkKEWN1cnJlbnRQb3B1bGF0aW9uGAUgASgEMuoDCgpHYW1lU2VydmVy",
            "EkEKCkdldE5lYXJNYXASGC5HYXJkYXJpa2UuR2V0TWFwUmVxdWVzdBoZLkdh",
            "cmRhcmlrZS5HZXRNYXBSZXNwb25zZRI6CgVMb2dpbhIXLkdhcmRhcmlrZS5M",
            "b2dpblJlcXVlc3QaGC5HYXJkYXJpa2UuTG9naW5SZXNwb25zZRJYCg9TZWxl",
            "Y3RDaGFyYWN0ZXISIS5HYXJkYXJpa2UuU2VsZWN0Q2hhcmFjdGVyUmVxdWVz",
            "dBoiLkdhcmRhcmlrZS5TZWxlY3RDaGFyYWN0ZXJSZXNwb25zZRJSCg1QbGFj",
            "ZUJ1aWxkaW5nEh8uR2FyZGFyaWtlLlBsYWNlQnVpbGRpbmdSZXF1ZXN0GiAu",
            "R2FyZGFyaWtlLlBsYWNlQnVpbGRpbmdSZXNwb25zZRJYCg9TZW5kQ2hhdE1l",
            "c3NhZ2USIS5HYXJkYXJpa2UuU2VuZENoYXRNZXNzYWdlUmVxdWVzdBoiLkdh",
            "cmRhcmlrZS5TZW5kQ2hhdE1lc3NhZ2VSZXNwb25zZRJVCg5HZXRDaGF0SGlz",
            "dG9yeRIgLkdhcmRhcmlrZS5HZXRDaGF0SGlzdG9yeVJlcXVlc3QaIS5HYXJk",
            "YXJpa2UuR2V0Q2hhdEhpc3RvcnlSZXNwb25zZUIHWgUuO3JwY2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Request), global::Gardarike.Request.Parser, new[]{ "GetMapRequest", "LoginRequest", "SelectCharacterRequest", "PlaceBuildingRequest", "SendChatMessageRequest", "GetChatHistoryRequest", "GetWorkDistributionRequest" }, new[]{ "Data" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.GetWorkDistributionRequest), global::Gardarike.GetWorkDistributionRequest.Parser, new[]{ "SessionID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.GetChatHistoryRequest), global::Gardarike.GetChatHistoryRequest.Parser, new[]{ "SessionID", "Offset", "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.SendChatMessageRequest), global::Gardarike.SendChatMessageRequest.Parser, new[]{ "SessionID", "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.PlaceBuildingRequest), global::Gardarike.PlaceBuildingRequest.Parser, new[]{ "SessionID", "BuildingID", "Location" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.GetMapRequest), global::Gardarike.GetMapRequest.Parser, new[]{ "SessionID", "Location" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.LoginRequest), global::Gardarike.LoginRequest.Parser, new[]{ "Username", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.SelectCharacterRequest), global::Gardarike.SelectCharacterRequest.Parser, new[]{ "SessionID", "CharacterID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Response), global::Gardarike.Response.Parser, new[]{ "ErrorResponse", "GetMapResponse", "LoginResponse", "MultipartResponse", "SelectCharacterResponse", "PlaceBuildingResponse", "SendChatMessageResponse", "GetChatHistoryResponse", "ChatMessagePublishResponse", "GetWorkDistributionResponse" }, new[]{ "Data" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.GetWorkDistributionResponse), global::Gardarike.GetWorkDistributionResponse.Parser, new[]{ "IdleCount", "WoodcutterCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.ChatMessagePublishResponse), global::Gardarike.ChatMessagePublishResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.GetChatHistoryResponse), global::Gardarike.GetChatHistoryResponse.Parser, new[]{ "Messages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.SendChatMessageResponse), global::Gardarike.SendChatMessageResponse.Parser, new[]{ "MessageID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.PlaceBuildingResponse), global::Gardarike.PlaceBuildingResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.MultipartResponse), global::Gardarike.MultipartResponse.Parser, new[]{ "Parts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.LoginResponse), global::Gardarike.LoginResponse.Parser, new[]{ "SessionID", "Characters" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.ErrorResponse), global::Gardarike.ErrorResponse.Parser, new[]{ "Message", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.SelectCharacterResponse), global::Gardarike.SelectCharacterResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.ChatMessage), global::Gardarike.ChatMessage.Parser, new[]{ "Id", "Sender", "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Event), global::Gardarike.Event.Parser, new[]{ "BuildingPlacedEvent", "ChatMessageEvent", "CharacterUpdatedEvent", "ResourceUpdatedEvent" }, new[]{ "Payload" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.ResourceUpdatedEvent), global::Gardarike.ResourceUpdatedEvent.Parser, new[]{ "TreesCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.CharacterUpdatedEvent), global::Gardarike.CharacterUpdatedEvent.Parser, new[]{ "NewState" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.BuildingPlacedEvent), global::Gardarike.BuildingPlacedEvent.Parser, new[]{ "BuildingID", "OwnerID", "Location" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.NewChatMessageEvent), global::Gardarike.NewChatMessageEvent.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Vector3D), global::Gardarike.Vector3D.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Map), global::Gardarike.Map.Parser, new[]{ "Width", "Height", "Points", "Buildings", "TreesCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Building), global::Gardarike.Building.Parser, new[]{ "Id", "OwnerID", "Location" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.GetMapResponse), global::Gardarike.GetMapResponse.Parser, new[]{ "Map" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.MapChunk), global::Gardarike.MapChunk.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Vector3), global::Gardarike.Vector3.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Handshake), global::Gardarike.Handshake.Parser, new[]{ "Login", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Character), global::Gardarike.Character.Parser, new[]{ "Id", "Name", "Gold", "MaxPopulation", "CurrentPopulation" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  Requests
  /// </summary>
  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      switch (other.DataCase) {
        case DataOneofCase.GetMapRequest:
          GetMapRequest = other.GetMapRequest.Clone();
          break;
        case DataOneofCase.LoginRequest:
          LoginRequest = other.LoginRequest.Clone();
          break;
        case DataOneofCase.SelectCharacterRequest:
          SelectCharacterRequest = other.SelectCharacterRequest.Clone();
          break;
        case DataOneofCase.PlaceBuildingRequest:
          PlaceBuildingRequest = other.PlaceBuildingRequest.Clone();
          break;
        case DataOneofCase.SendChatMessageRequest:
          SendChatMessageRequest = other.SendChatMessageRequest.Clone();
          break;
        case DataOneofCase.GetChatHistoryRequest:
          GetChatHistoryRequest = other.GetChatHistoryRequest.Clone();
          break;
        case DataOneofCase.GetWorkDistributionRequest:
          GetWorkDistributionRequest = other.GetWorkDistributionRequest.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "getMapRequest" field.</summary>
    public const int GetMapRequestFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.GetMapRequest GetMapRequest {
      get { return dataCase_ == DataOneofCase.GetMapRequest ? (global::Gardarike.GetMapRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GetMapRequest;
      }
    }

    /// <summary>Field number for the "loginRequest" field.</summary>
    public const int LoginRequestFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.LoginRequest LoginRequest {
      get { return dataCase_ == DataOneofCase.LoginRequest ? (global::Gardarike.LoginRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.LoginRequest;
      }
    }

    /// <summary>Field number for the "selectCharacterRequest" field.</summary>
    public const int SelectCharacterRequestFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.SelectCharacterRequest SelectCharacterRequest {
      get { return dataCase_ == DataOneofCase.SelectCharacterRequest ? (global::Gardarike.SelectCharacterRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.SelectCharacterRequest;
      }
    }

    /// <summary>Field number for the "placeBuildingRequest" field.</summary>
    public const int PlaceBuildingRequestFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.PlaceBuildingRequest PlaceBuildingRequest {
      get { return dataCase_ == DataOneofCase.PlaceBuildingRequest ? (global::Gardarike.PlaceBuildingRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.PlaceBuildingRequest;
      }
    }

    /// <summary>Field number for the "sendChatMessageRequest" field.</summary>
    public const int SendChatMessageRequestFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.SendChatMessageRequest SendChatMessageRequest {
      get { return dataCase_ == DataOneofCase.SendChatMessageRequest ? (global::Gardarike.SendChatMessageRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.SendChatMessageRequest;
      }
    }

    /// <summary>Field number for the "getChatHistoryRequest" field.</summary>
    public const int GetChatHistoryRequestFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.GetChatHistoryRequest GetChatHistoryRequest {
      get { return dataCase_ == DataOneofCase.GetChatHistoryRequest ? (global::Gardarike.GetChatHistoryRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GetChatHistoryRequest;
      }
    }

    /// <summary>Field number for the "getWorkDistributionRequest" field.</summary>
    public const int GetWorkDistributionRequestFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.GetWorkDistributionRequest GetWorkDistributionRequest {
      get { return dataCase_ == DataOneofCase.GetWorkDistributionRequest ? (global::Gardarike.GetWorkDistributionRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GetWorkDistributionRequest;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      GetMapRequest = 1,
      LoginRequest = 2,
      SelectCharacterRequest = 3,
      PlaceBuildingRequest = 4,
      SendChatMessageRequest = 5,
      GetChatHistoryRequest = 6,
      GetWorkDistributionRequest = 7,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GetMapRequest, other.GetMapRequest)) return false;
      if (!object.Equals(LoginRequest, other.LoginRequest)) return false;
      if (!object.Equals(SelectCharacterRequest, other.SelectCharacterRequest)) return false;
      if (!object.Equals(PlaceBuildingRequest, other.PlaceBuildingRequest)) return false;
      if (!object.Equals(SendChatMessageRequest, other.SendChatMessageRequest)) return false;
      if (!object.Equals(GetChatHistoryRequest, other.GetChatHistoryRequest)) return false;
      if (!object.Equals(GetWorkDistributionRequest, other.GetWorkDistributionRequest)) return false;
      if (DataCase != other.DataCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataCase_ == DataOneofCase.GetMapRequest) hash ^= GetMapRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.LoginRequest) hash ^= LoginRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.SelectCharacterRequest) hash ^= SelectCharacterRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.PlaceBuildingRequest) hash ^= PlaceBuildingRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.SendChatMessageRequest) hash ^= SendChatMessageRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.GetChatHistoryRequest) hash ^= GetChatHistoryRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.GetWorkDistributionRequest) hash ^= GetWorkDistributionRequest.GetHashCode();
      hash ^= (int) dataCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dataCase_ == DataOneofCase.GetMapRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(GetMapRequest);
      }
      if (dataCase_ == DataOneofCase.LoginRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(LoginRequest);
      }
      if (dataCase_ == DataOneofCase.SelectCharacterRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(SelectCharacterRequest);
      }
      if (dataCase_ == DataOneofCase.PlaceBuildingRequest) {
        output.WriteRawTag(34);
        output.WriteMessage(PlaceBuildingRequest);
      }
      if (dataCase_ == DataOneofCase.SendChatMessageRequest) {
        output.WriteRawTag(42);
        output.WriteMessage(SendChatMessageRequest);
      }
      if (dataCase_ == DataOneofCase.GetChatHistoryRequest) {
        output.WriteRawTag(50);
        output.WriteMessage(GetChatHistoryRequest);
      }
      if (dataCase_ == DataOneofCase.GetWorkDistributionRequest) {
        output.WriteRawTag(58);
        output.WriteMessage(GetWorkDistributionRequest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataCase_ == DataOneofCase.GetMapRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMapRequest);
      }
      if (dataCase_ == DataOneofCase.LoginRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginRequest);
      }
      if (dataCase_ == DataOneofCase.SelectCharacterRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelectCharacterRequest);
      }
      if (dataCase_ == DataOneofCase.PlaceBuildingRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaceBuildingRequest);
      }
      if (dataCase_ == DataOneofCase.SendChatMessageRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendChatMessageRequest);
      }
      if (dataCase_ == DataOneofCase.GetChatHistoryRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetChatHistoryRequest);
      }
      if (dataCase_ == DataOneofCase.GetWorkDistributionRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetWorkDistributionRequest);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      switch (other.DataCase) {
        case DataOneofCase.GetMapRequest:
          GetMapRequest = other.GetMapRequest;
          break;
        case DataOneofCase.LoginRequest:
          LoginRequest = other.LoginRequest;
          break;
        case DataOneofCase.SelectCharacterRequest:
          SelectCharacterRequest = other.SelectCharacterRequest;
          break;
        case DataOneofCase.PlaceBuildingRequest:
          PlaceBuildingRequest = other.PlaceBuildingRequest;
          break;
        case DataOneofCase.SendChatMessageRequest:
          SendChatMessageRequest = other.SendChatMessageRequest;
          break;
        case DataOneofCase.GetChatHistoryRequest:
          GetChatHistoryRequest = other.GetChatHistoryRequest;
          break;
        case DataOneofCase.GetWorkDistributionRequest:
          GetWorkDistributionRequest = other.GetWorkDistributionRequest;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::Gardarike.GetMapRequest subBuilder = new global::Gardarike.GetMapRequest();
            if (dataCase_ == DataOneofCase.GetMapRequest) {
              subBuilder.MergeFrom(GetMapRequest);
            }
            input.ReadMessage(subBuilder);
            GetMapRequest = subBuilder;
            break;
          }
          case 18: {
            global::Gardarike.LoginRequest subBuilder = new global::Gardarike.LoginRequest();
            if (dataCase_ == DataOneofCase.LoginRequest) {
              subBuilder.MergeFrom(LoginRequest);
            }
            input.ReadMessage(subBuilder);
            LoginRequest = subBuilder;
            break;
          }
          case 26: {
            global::Gardarike.SelectCharacterRequest subBuilder = new global::Gardarike.SelectCharacterRequest();
            if (dataCase_ == DataOneofCase.SelectCharacterRequest) {
              subBuilder.MergeFrom(SelectCharacterRequest);
            }
            input.ReadMessage(subBuilder);
            SelectCharacterRequest = subBuilder;
            break;
          }
          case 34: {
            global::Gardarike.PlaceBuildingRequest subBuilder = new global::Gardarike.PlaceBuildingRequest();
            if (dataCase_ == DataOneofCase.PlaceBuildingRequest) {
              subBuilder.MergeFrom(PlaceBuildingRequest);
            }
            input.ReadMessage(subBuilder);
            PlaceBuildingRequest = subBuilder;
            break;
          }
          case 42: {
            global::Gardarike.SendChatMessageRequest subBuilder = new global::Gardarike.SendChatMessageRequest();
            if (dataCase_ == DataOneofCase.SendChatMessageRequest) {
              subBuilder.MergeFrom(SendChatMessageRequest);
            }
            input.ReadMessage(subBuilder);
            SendChatMessageRequest = subBuilder;
            break;
          }
          case 50: {
            global::Gardarike.GetChatHistoryRequest subBuilder = new global::Gardarike.GetChatHistoryRequest();
            if (dataCase_ == DataOneofCase.GetChatHistoryRequest) {
              subBuilder.MergeFrom(GetChatHistoryRequest);
            }
            input.ReadMessage(subBuilder);
            GetChatHistoryRequest = subBuilder;
            break;
          }
          case 58: {
            global::Gardarike.GetWorkDistributionRequest subBuilder = new global::Gardarike.GetWorkDistributionRequest();
            if (dataCase_ == DataOneofCase.GetWorkDistributionRequest) {
              subBuilder.MergeFrom(GetWorkDistributionRequest);
            }
            input.ReadMessage(subBuilder);
            GetWorkDistributionRequest = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetWorkDistributionRequest : pb::IMessage<GetWorkDistributionRequest> {
    private static readonly pb::MessageParser<GetWorkDistributionRequest> _parser = new pb::MessageParser<GetWorkDistributionRequest>(() => new GetWorkDistributionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWorkDistributionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorkDistributionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorkDistributionRequest(GetWorkDistributionRequest other) : this() {
      sessionID_ = other.sessionID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorkDistributionRequest Clone() {
      return new GetWorkDistributionRequest(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWorkDistributionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWorkDistributionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWorkDistributionRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Get 'count' chat messages starting from some message 'lastMessageID'
  ///  Messages are sorted from newest to oldest
  /// </summary>
  public sealed partial class GetChatHistoryRequest : pb::IMessage<GetChatHistoryRequest> {
    private static readonly pb::MessageParser<GetChatHistoryRequest> _parser = new pb::MessageParser<GetChatHistoryRequest>(() => new GetChatHistoryRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetChatHistoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChatHistoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChatHistoryRequest(GetChatHistoryRequest other) : this() {
      sessionID_ = other.sessionID_;
      offset_ = other.offset_;
      count_ = other.count_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChatHistoryRequest Clone() {
      return new GetChatHistoryRequest(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 3;
    private long count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetChatHistoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetChatHistoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      if (Offset != other.Offset) return false;
      if (Count != other.Count) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Count != 0L) hash ^= Count.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (Count != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Count);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetChatHistoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
          case 24: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendChatMessageRequest : pb::IMessage<SendChatMessageRequest> {
    private static readonly pb::MessageParser<SendChatMessageRequest> _parser = new pb::MessageParser<SendChatMessageRequest>(() => new SendChatMessageRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendChatMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatMessageRequest(SendChatMessageRequest other) : this() {
      sessionID_ = other.sessionID_;
      text_ = other.text_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatMessageRequest Clone() {
      return new SendChatMessageRequest(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendChatMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendChatMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      if (Text != other.Text) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendChatMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlaceBuildingRequest : pb::IMessage<PlaceBuildingRequest> {
    private static readonly pb::MessageParser<PlaceBuildingRequest> _parser = new pb::MessageParser<PlaceBuildingRequest>(() => new PlaceBuildingRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlaceBuildingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceBuildingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceBuildingRequest(PlaceBuildingRequest other) : this() {
      sessionID_ = other.sessionID_;
      buildingID_ = other.buildingID_;
      Location = other.location_ != null ? other.Location.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceBuildingRequest Clone() {
      return new PlaceBuildingRequest(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "buildingID" field.</summary>
    public const int BuildingIDFieldNumber = 2;
    private long buildingID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BuildingID {
      get { return buildingID_; }
      set {
        buildingID_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 3;
    private global::Gardarike.Vector3D location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.Vector3D Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlaceBuildingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlaceBuildingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      if (BuildingID != other.BuildingID) return false;
      if (!object.Equals(Location, other.Location)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      if (BuildingID != 0L) hash ^= BuildingID.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
      if (BuildingID != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BuildingID);
      }
      if (location_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      if (BuildingID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BuildingID);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlaceBuildingRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
      if (other.BuildingID != 0L) {
        BuildingID = other.BuildingID;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          location_ = new global::Gardarike.Vector3D();
        }
        Location.MergeFrom(other.Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
          case 16: {
            BuildingID = input.ReadInt64();
            break;
          }
          case 26: {
            if (location_ == null) {
              location_ = new global::Gardarike.Vector3D();
            }
            input.ReadMessage(location_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMapRequest : pb::IMessage<GetMapRequest> {
    private static readonly pb::MessageParser<GetMapRequest> _parser = new pb::MessageParser<GetMapRequest>(() => new GetMapRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMapRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMapRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMapRequest(GetMapRequest other) : this() {
      sessionID_ = other.sessionID_;
      Location = other.location_ != null ? other.Location.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMapRequest Clone() {
      return new GetMapRequest(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Gardarike.Vector3D location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.Vector3D Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMapRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMapRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      if (!object.Equals(Location, other.Location)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMapRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          location_ = new global::Gardarike.Vector3D();
        }
        Location.MergeFrom(other.Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              location_ = new global::Gardarike.Vector3D();
            }
            input.ReadMessage(location_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      username_ = other.username_;
      password_ = other.password_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SelectCharacterRequest : pb::IMessage<SelectCharacterRequest> {
    private static readonly pb::MessageParser<SelectCharacterRequest> _parser = new pb::MessageParser<SelectCharacterRequest>(() => new SelectCharacterRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelectCharacterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectCharacterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectCharacterRequest(SelectCharacterRequest other) : this() {
      sessionID_ = other.sessionID_;
      characterID_ = other.characterID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectCharacterRequest Clone() {
      return new SelectCharacterRequest(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "characterID" field.</summary>
    public const int CharacterIDFieldNumber = 2;
    private int characterID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CharacterID {
      get { return characterID_; }
      set {
        characterID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelectCharacterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelectCharacterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      if (CharacterID != other.CharacterID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      if (CharacterID != 0) hash ^= CharacterID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
      if (CharacterID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CharacterID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      if (CharacterID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharacterID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelectCharacterRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
      if (other.CharacterID != 0) {
        CharacterID = other.CharacterID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
          case 16: {
            CharacterID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Responses
  /// </summary>
  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      switch (other.DataCase) {
        case DataOneofCase.ErrorResponse:
          ErrorResponse = other.ErrorResponse.Clone();
          break;
        case DataOneofCase.GetMapResponse:
          GetMapResponse = other.GetMapResponse.Clone();
          break;
        case DataOneofCase.LoginResponse:
          LoginResponse = other.LoginResponse.Clone();
          break;
        case DataOneofCase.MultipartResponse:
          MultipartResponse = other.MultipartResponse.Clone();
          break;
        case DataOneofCase.SelectCharacterResponse:
          SelectCharacterResponse = other.SelectCharacterResponse.Clone();
          break;
        case DataOneofCase.PlaceBuildingResponse:
          PlaceBuildingResponse = other.PlaceBuildingResponse.Clone();
          break;
        case DataOneofCase.SendChatMessageResponse:
          SendChatMessageResponse = other.SendChatMessageResponse.Clone();
          break;
        case DataOneofCase.GetChatHistoryResponse:
          GetChatHistoryResponse = other.GetChatHistoryResponse.Clone();
          break;
        case DataOneofCase.ChatMessagePublishResponse:
          ChatMessagePublishResponse = other.ChatMessagePublishResponse.Clone();
          break;
        case DataOneofCase.GetWorkDistributionResponse:
          GetWorkDistributionResponse = other.GetWorkDistributionResponse.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "errorResponse" field.</summary>
    public const int ErrorResponseFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.ErrorResponse ErrorResponse {
      get { return dataCase_ == DataOneofCase.ErrorResponse ? (global::Gardarike.ErrorResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.ErrorResponse;
      }
    }

    /// <summary>Field number for the "getMapResponse" field.</summary>
    public const int GetMapResponseFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.GetMapResponse GetMapResponse {
      get { return dataCase_ == DataOneofCase.GetMapResponse ? (global::Gardarike.GetMapResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GetMapResponse;
      }
    }

    /// <summary>Field number for the "loginResponse" field.</summary>
    public const int LoginResponseFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.LoginResponse LoginResponse {
      get { return dataCase_ == DataOneofCase.LoginResponse ? (global::Gardarike.LoginResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.LoginResponse;
      }
    }

    /// <summary>Field number for the "multipartResponse" field.</summary>
    public const int MultipartResponseFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.MultipartResponse MultipartResponse {
      get { return dataCase_ == DataOneofCase.MultipartResponse ? (global::Gardarike.MultipartResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.MultipartResponse;
      }
    }

    /// <summary>Field number for the "selectCharacterResponse" field.</summary>
    public const int SelectCharacterResponseFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.SelectCharacterResponse SelectCharacterResponse {
      get { return dataCase_ == DataOneofCase.SelectCharacterResponse ? (global::Gardarike.SelectCharacterResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.SelectCharacterResponse;
      }
    }

    /// <summary>Field number for the "placeBuildingResponse" field.</summary>
    public const int PlaceBuildingResponseFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.PlaceBuildingResponse PlaceBuildingResponse {
      get { return dataCase_ == DataOneofCase.PlaceBuildingResponse ? (global::Gardarike.PlaceBuildingResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.PlaceBuildingResponse;
      }
    }

    /// <summary>Field number for the "sendChatMessageResponse" field.</summary>
    public const int SendChatMessageResponseFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.SendChatMessageResponse SendChatMessageResponse {
      get { return dataCase_ == DataOneofCase.SendChatMessageResponse ? (global::Gardarike.SendChatMessageResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.SendChatMessageResponse;
      }
    }

    /// <summary>Field number for the "getChatHistoryResponse" field.</summary>
    public const int GetChatHistoryResponseFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.GetChatHistoryResponse GetChatHistoryResponse {
      get { return dataCase_ == DataOneofCase.GetChatHistoryResponse ? (global::Gardarike.GetChatHistoryResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GetChatHistoryResponse;
      }
    }

    /// <summary>Field number for the "chatMessagePublishResponse" field.</summary>
    public const int ChatMessagePublishResponseFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.ChatMessagePublishResponse ChatMessagePublishResponse {
      get { return dataCase_ == DataOneofCase.ChatMessagePublishResponse ? (global::Gardarike.ChatMessagePublishResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.ChatMessagePublishResponse;
      }
    }

    /// <summary>Field number for the "getWorkDistributionResponse" field.</summary>
    public const int GetWorkDistributionResponseFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.GetWorkDistributionResponse GetWorkDistributionResponse {
      get { return dataCase_ == DataOneofCase.GetWorkDistributionResponse ? (global::Gardarike.GetWorkDistributionResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GetWorkDistributionResponse;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      ErrorResponse = 1,
      GetMapResponse = 2,
      LoginResponse = 3,
      MultipartResponse = 4,
      SelectCharacterResponse = 5,
      PlaceBuildingResponse = 6,
      SendChatMessageResponse = 7,
      GetChatHistoryResponse = 8,
      ChatMessagePublishResponse = 9,
      GetWorkDistributionResponse = 10,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ErrorResponse, other.ErrorResponse)) return false;
      if (!object.Equals(GetMapResponse, other.GetMapResponse)) return false;
      if (!object.Equals(LoginResponse, other.LoginResponse)) return false;
      if (!object.Equals(MultipartResponse, other.MultipartResponse)) return false;
      if (!object.Equals(SelectCharacterResponse, other.SelectCharacterResponse)) return false;
      if (!object.Equals(PlaceBuildingResponse, other.PlaceBuildingResponse)) return false;
      if (!object.Equals(SendChatMessageResponse, other.SendChatMessageResponse)) return false;
      if (!object.Equals(GetChatHistoryResponse, other.GetChatHistoryResponse)) return false;
      if (!object.Equals(ChatMessagePublishResponse, other.ChatMessagePublishResponse)) return false;
      if (!object.Equals(GetWorkDistributionResponse, other.GetWorkDistributionResponse)) return false;
      if (DataCase != other.DataCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataCase_ == DataOneofCase.ErrorResponse) hash ^= ErrorResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.GetMapResponse) hash ^= GetMapResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.LoginResponse) hash ^= LoginResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.MultipartResponse) hash ^= MultipartResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.SelectCharacterResponse) hash ^= SelectCharacterResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.PlaceBuildingResponse) hash ^= PlaceBuildingResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.SendChatMessageResponse) hash ^= SendChatMessageResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.GetChatHistoryResponse) hash ^= GetChatHistoryResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.ChatMessagePublishResponse) hash ^= ChatMessagePublishResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.GetWorkDistributionResponse) hash ^= GetWorkDistributionResponse.GetHashCode();
      hash ^= (int) dataCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dataCase_ == DataOneofCase.ErrorResponse) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrorResponse);
      }
      if (dataCase_ == DataOneofCase.GetMapResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(GetMapResponse);
      }
      if (dataCase_ == DataOneofCase.LoginResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(LoginResponse);
      }
      if (dataCase_ == DataOneofCase.MultipartResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(MultipartResponse);
      }
      if (dataCase_ == DataOneofCase.SelectCharacterResponse) {
        output.WriteRawTag(42);
        output.WriteMessage(SelectCharacterResponse);
      }
      if (dataCase_ == DataOneofCase.PlaceBuildingResponse) {
        output.WriteRawTag(50);
        output.WriteMessage(PlaceBuildingResponse);
      }
      if (dataCase_ == DataOneofCase.SendChatMessageResponse) {
        output.WriteRawTag(58);
        output.WriteMessage(SendChatMessageResponse);
      }
      if (dataCase_ == DataOneofCase.GetChatHistoryResponse) {
        output.WriteRawTag(66);
        output.WriteMessage(GetChatHistoryResponse);
      }
      if (dataCase_ == DataOneofCase.ChatMessagePublishResponse) {
        output.WriteRawTag(74);
        output.WriteMessage(ChatMessagePublishResponse);
      }
      if (dataCase_ == DataOneofCase.GetWorkDistributionResponse) {
        output.WriteRawTag(82);
        output.WriteMessage(GetWorkDistributionResponse);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataCase_ == DataOneofCase.ErrorResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorResponse);
      }
      if (dataCase_ == DataOneofCase.GetMapResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMapResponse);
      }
      if (dataCase_ == DataOneofCase.LoginResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginResponse);
      }
      if (dataCase_ == DataOneofCase.MultipartResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MultipartResponse);
      }
      if (dataCase_ == DataOneofCase.SelectCharacterResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelectCharacterResponse);
      }
      if (dataCase_ == DataOneofCase.PlaceBuildingResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaceBuildingResponse);
      }
      if (dataCase_ == DataOneofCase.SendChatMessageResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendChatMessageResponse);
      }
      if (dataCase_ == DataOneofCase.GetChatHistoryResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetChatHistoryResponse);
      }
      if (dataCase_ == DataOneofCase.ChatMessagePublishResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatMessagePublishResponse);
      }
      if (dataCase_ == DataOneofCase.GetWorkDistributionResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetWorkDistributionResponse);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      switch (other.DataCase) {
        case DataOneofCase.ErrorResponse:
          ErrorResponse = other.ErrorResponse;
          break;
        case DataOneofCase.GetMapResponse:
          GetMapResponse = other.GetMapResponse;
          break;
        case DataOneofCase.LoginResponse:
          LoginResponse = other.LoginResponse;
          break;
        case DataOneofCase.MultipartResponse:
          MultipartResponse = other.MultipartResponse;
          break;
        case DataOneofCase.SelectCharacterResponse:
          SelectCharacterResponse = other.SelectCharacterResponse;
          break;
        case DataOneofCase.PlaceBuildingResponse:
          PlaceBuildingResponse = other.PlaceBuildingResponse;
          break;
        case DataOneofCase.SendChatMessageResponse:
          SendChatMessageResponse = other.SendChatMessageResponse;
          break;
        case DataOneofCase.GetChatHistoryResponse:
          GetChatHistoryResponse = other.GetChatHistoryResponse;
          break;
        case DataOneofCase.ChatMessagePublishResponse:
          ChatMessagePublishResponse = other.ChatMessagePublishResponse;
          break;
        case DataOneofCase.GetWorkDistributionResponse:
          GetWorkDistributionResponse = other.GetWorkDistributionResponse;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::Gardarike.ErrorResponse subBuilder = new global::Gardarike.ErrorResponse();
            if (dataCase_ == DataOneofCase.ErrorResponse) {
              subBuilder.MergeFrom(ErrorResponse);
            }
            input.ReadMessage(subBuilder);
            ErrorResponse = subBuilder;
            break;
          }
          case 18: {
            global::Gardarike.GetMapResponse subBuilder = new global::Gardarike.GetMapResponse();
            if (dataCase_ == DataOneofCase.GetMapResponse) {
              subBuilder.MergeFrom(GetMapResponse);
            }
            input.ReadMessage(subBuilder);
            GetMapResponse = subBuilder;
            break;
          }
          case 26: {
            global::Gardarike.LoginResponse subBuilder = new global::Gardarike.LoginResponse();
            if (dataCase_ == DataOneofCase.LoginResponse) {
              subBuilder.MergeFrom(LoginResponse);
            }
            input.ReadMessage(subBuilder);
            LoginResponse = subBuilder;
            break;
          }
          case 34: {
            global::Gardarike.MultipartResponse subBuilder = new global::Gardarike.MultipartResponse();
            if (dataCase_ == DataOneofCase.MultipartResponse) {
              subBuilder.MergeFrom(MultipartResponse);
            }
            input.ReadMessage(subBuilder);
            MultipartResponse = subBuilder;
            break;
          }
          case 42: {
            global::Gardarike.SelectCharacterResponse subBuilder = new global::Gardarike.SelectCharacterResponse();
            if (dataCase_ == DataOneofCase.SelectCharacterResponse) {
              subBuilder.MergeFrom(SelectCharacterResponse);
            }
            input.ReadMessage(subBuilder);
            SelectCharacterResponse = subBuilder;
            break;
          }
          case 50: {
            global::Gardarike.PlaceBuildingResponse subBuilder = new global::Gardarike.PlaceBuildingResponse();
            if (dataCase_ == DataOneofCase.PlaceBuildingResponse) {
              subBuilder.MergeFrom(PlaceBuildingResponse);
            }
            input.ReadMessage(subBuilder);
            PlaceBuildingResponse = subBuilder;
            break;
          }
          case 58: {
            global::Gardarike.SendChatMessageResponse subBuilder = new global::Gardarike.SendChatMessageResponse();
            if (dataCase_ == DataOneofCase.SendChatMessageResponse) {
              subBuilder.MergeFrom(SendChatMessageResponse);
            }
            input.ReadMessage(subBuilder);
            SendChatMessageResponse = subBuilder;
            break;
          }
          case 66: {
            global::Gardarike.GetChatHistoryResponse subBuilder = new global::Gardarike.GetChatHistoryResponse();
            if (dataCase_ == DataOneofCase.GetChatHistoryResponse) {
              subBuilder.MergeFrom(GetChatHistoryResponse);
            }
            input.ReadMessage(subBuilder);
            GetChatHistoryResponse = subBuilder;
            break;
          }
          case 74: {
            global::Gardarike.ChatMessagePublishResponse subBuilder = new global::Gardarike.ChatMessagePublishResponse();
            if (dataCase_ == DataOneofCase.ChatMessagePublishResponse) {
              subBuilder.MergeFrom(ChatMessagePublishResponse);
            }
            input.ReadMessage(subBuilder);
            ChatMessagePublishResponse = subBuilder;
            break;
          }
          case 82: {
            global::Gardarike.GetWorkDistributionResponse subBuilder = new global::Gardarike.GetWorkDistributionResponse();
            if (dataCase_ == DataOneofCase.GetWorkDistributionResponse) {
              subBuilder.MergeFrom(GetWorkDistributionResponse);
            }
            input.ReadMessage(subBuilder);
            GetWorkDistributionResponse = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetWorkDistributionResponse : pb::IMessage<GetWorkDistributionResponse> {
    private static readonly pb::MessageParser<GetWorkDistributionResponse> _parser = new pb::MessageParser<GetWorkDistributionResponse>(() => new GetWorkDistributionResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWorkDistributionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorkDistributionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorkDistributionResponse(GetWorkDistributionResponse other) : this() {
      idleCount_ = other.idleCount_;
      woodcutterCount_ = other.woodcutterCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorkDistributionResponse Clone() {
      return new GetWorkDistributionResponse(this);
    }

    /// <summary>Field number for the "idleCount" field.</summary>
    public const int IdleCountFieldNumber = 1;
    private long idleCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IdleCount {
      get { return idleCount_; }
      set {
        idleCount_ = value;
      }
    }

    /// <summary>Field number for the "woodcutterCount" field.</summary>
    public const int WoodcutterCountFieldNumber = 2;
    private long woodcutterCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WoodcutterCount {
      get { return woodcutterCount_; }
      set {
        woodcutterCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWorkDistributionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWorkDistributionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdleCount != other.IdleCount) return false;
      if (WoodcutterCount != other.WoodcutterCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdleCount != 0L) hash ^= IdleCount.GetHashCode();
      if (WoodcutterCount != 0L) hash ^= WoodcutterCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdleCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(IdleCount);
      }
      if (WoodcutterCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(WoodcutterCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdleCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IdleCount);
      }
      if (WoodcutterCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WoodcutterCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWorkDistributionResponse other) {
      if (other == null) {
        return;
      }
      if (other.IdleCount != 0L) {
        IdleCount = other.IdleCount;
      }
      if (other.WoodcutterCount != 0L) {
        WoodcutterCount = other.WoodcutterCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            IdleCount = input.ReadInt64();
            break;
          }
          case 16: {
            WoodcutterCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatMessagePublishResponse : pb::IMessage<ChatMessagePublishResponse> {
    private static readonly pb::MessageParser<ChatMessagePublishResponse> _parser = new pb::MessageParser<ChatMessagePublishResponse>(() => new ChatMessagePublishResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatMessagePublishResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessagePublishResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessagePublishResponse(ChatMessagePublishResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessagePublishResponse Clone() {
      return new ChatMessagePublishResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatMessagePublishResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatMessagePublishResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatMessagePublishResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class GetChatHistoryResponse : pb::IMessage<GetChatHistoryResponse> {
    private static readonly pb::MessageParser<GetChatHistoryResponse> _parser = new pb::MessageParser<GetChatHistoryResponse>(() => new GetChatHistoryResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetChatHistoryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChatHistoryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChatHistoryResponse(GetChatHistoryResponse other) : this() {
      messages_ = other.messages_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChatHistoryResponse Clone() {
      return new GetChatHistoryResponse(this);
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int MessagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Gardarike.ChatMessage> _repeated_messages_codec
        = pb::FieldCodec.ForMessage(10, global::Gardarike.ChatMessage.Parser);
    private readonly pbc::RepeatedField<global::Gardarike.ChatMessage> messages_ = new pbc::RepeatedField<global::Gardarike.ChatMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gardarike.ChatMessage> Messages {
      get { return messages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetChatHistoryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetChatHistoryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!messages_.Equals(other.messages_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= messages_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      messages_.WriteTo(output, _repeated_messages_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += messages_.CalculateSize(_repeated_messages_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetChatHistoryResponse other) {
      if (other == null) {
        return;
      }
      messages_.Add(other.messages_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendChatMessageResponse : pb::IMessage<SendChatMessageResponse> {
    private static readonly pb::MessageParser<SendChatMessageResponse> _parser = new pb::MessageParser<SendChatMessageResponse>(() => new SendChatMessageResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendChatMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatMessageResponse(SendChatMessageResponse other) : this() {
      messageID_ = other.messageID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatMessageResponse Clone() {
      return new SendChatMessageResponse(this);
    }

    /// <summary>Field number for the "messageID" field.</summary>
    public const int MessageIDFieldNumber = 1;
    private long messageID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MessageID {
      get { return messageID_; }
      set {
        messageID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendChatMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendChatMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageID != other.MessageID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageID != 0L) hash ^= MessageID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MessageID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MessageID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MessageID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendChatMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.MessageID != 0L) {
        MessageID = other.MessageID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MessageID = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlaceBuildingResponse : pb::IMessage<PlaceBuildingResponse> {
    private static readonly pb::MessageParser<PlaceBuildingResponse> _parser = new pb::MessageParser<PlaceBuildingResponse>(() => new PlaceBuildingResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlaceBuildingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceBuildingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceBuildingResponse(PlaceBuildingResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceBuildingResponse Clone() {
      return new PlaceBuildingResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlaceBuildingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlaceBuildingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlaceBuildingResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  /// <summary>
  ///  Response indicating start of the multipart response
  ///  Parts field indicating how many subsequent datagram packets
  ///  should be considered as a single response.
  /// </summary>
  public sealed partial class MultipartResponse : pb::IMessage<MultipartResponse> {
    private static readonly pb::MessageParser<MultipartResponse> _parser = new pb::MessageParser<MultipartResponse>(() => new MultipartResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultipartResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultipartResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultipartResponse(MultipartResponse other) : this() {
      parts_ = other.parts_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultipartResponse Clone() {
      return new MultipartResponse(this);
    }

    /// <summary>Field number for the "parts" field.</summary>
    public const int PartsFieldNumber = 1;
    private long parts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Parts {
      get { return parts_; }
      set {
        parts_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultipartResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultipartResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parts != other.Parts) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parts != 0L) hash ^= Parts.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parts != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Parts);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parts != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Parts);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultipartResponse other) {
      if (other == null) {
        return;
      }
      if (other.Parts != 0L) {
        Parts = other.Parts;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Parts = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginResponse : pb::IMessage<LoginResponse> {
    private static readonly pb::MessageParser<LoginResponse> _parser = new pb::MessageParser<LoginResponse>(() => new LoginResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse(LoginResponse other) : this() {
      sessionID_ = other.sessionID_;
      characters_ = other.characters_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse Clone() {
      return new LoginResponse(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "characters" field.</summary>
    public const int CharactersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Gardarike.Character> _repeated_characters_codec
        = pb::FieldCodec.ForMessage(18, global::Gardarike.Character.Parser);
    private readonly pbc::RepeatedField<global::Gardarike.Character> characters_ = new pbc::RepeatedField<global::Gardarike.Character>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gardarike.Character> Characters {
      get { return characters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      if(!characters_.Equals(other.characters_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      hash ^= characters_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
      characters_.WriteTo(output, _repeated_characters_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      size += characters_.CalculateSize(_repeated_characters_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResponse other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
      characters_.Add(other.characters_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
          case 18: {
            characters_.AddEntriesFrom(input, _repeated_characters_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ErrorResponse : pb::IMessage<ErrorResponse> {
    private static readonly pb::MessageParser<ErrorResponse> _parser = new pb::MessageParser<ErrorResponse>(() => new ErrorResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse(ErrorResponse other) : this() {
      message_ = other.message_;
      code_ = other.code_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse Clone() {
      return new ErrorResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private long code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ErrorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ErrorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      if (Code != other.Code) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Code != 0L) hash ^= Code.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (Code != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Code);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Code != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Code);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ErrorResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Code != 0L) {
        Code = other.Code;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
          case 16: {
            Code = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SelectCharacterResponse : pb::IMessage<SelectCharacterResponse> {
    private static readonly pb::MessageParser<SelectCharacterResponse> _parser = new pb::MessageParser<SelectCharacterResponse>(() => new SelectCharacterResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelectCharacterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectCharacterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectCharacterResponse(SelectCharacterResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectCharacterResponse Clone() {
      return new SelectCharacterResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelectCharacterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelectCharacterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelectCharacterResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class ChatMessage : pb::IMessage<ChatMessage> {
    private static readonly pb::MessageParser<ChatMessage> _parser = new pb::MessageParser<ChatMessage>(() => new ChatMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage(ChatMessage other) : this() {
      id_ = other.id_;
      sender_ = other.sender_;
      text_ = other.text_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage Clone() {
      return new ChatMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 2;
    private string sender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sender {
      get { return sender_; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 3;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Sender != other.Sender) return false;
      if (Text != other.Text) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Sender.Length != 0) hash ^= Sender.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Sender.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Sender);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Text);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Sender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Sender.Length != 0) {
        Sender = other.Sender;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Sender = input.ReadString();
            break;
          }
          case 26: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event : pb::IMessage<Event> {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event(Event other) : this() {
      switch (other.PayloadCase) {
        case PayloadOneofCase.BuildingPlacedEvent:
          BuildingPlacedEvent = other.BuildingPlacedEvent.Clone();
          break;
        case PayloadOneofCase.ChatMessageEvent:
          ChatMessageEvent = other.ChatMessageEvent.Clone();
          break;
        case PayloadOneofCase.CharacterUpdatedEvent:
          CharacterUpdatedEvent = other.CharacterUpdatedEvent.Clone();
          break;
        case PayloadOneofCase.ResourceUpdatedEvent:
          ResourceUpdatedEvent = other.ResourceUpdatedEvent.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "buildingPlacedEvent" field.</summary>
    public const int BuildingPlacedEventFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.BuildingPlacedEvent BuildingPlacedEvent {
      get { return payloadCase_ == PayloadOneofCase.BuildingPlacedEvent ? (global::Gardarike.BuildingPlacedEvent) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.BuildingPlacedEvent;
      }
    }

    /// <summary>Field number for the "chatMessageEvent" field.</summary>
    public const int ChatMessageEventFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.NewChatMessageEvent ChatMessageEvent {
      get { return payloadCase_ == PayloadOneofCase.ChatMessageEvent ? (global::Gardarike.NewChatMessageEvent) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ChatMessageEvent;
      }
    }

    /// <summary>Field number for the "characterUpdatedEvent" field.</summary>
    public const int CharacterUpdatedEventFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.CharacterUpdatedEvent CharacterUpdatedEvent {
      get { return payloadCase_ == PayloadOneofCase.CharacterUpdatedEvent ? (global::Gardarike.CharacterUpdatedEvent) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.CharacterUpdatedEvent;
      }
    }

    /// <summary>Field number for the "resourceUpdatedEvent" field.</summary>
    public const int ResourceUpdatedEventFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.ResourceUpdatedEvent ResourceUpdatedEvent {
      get { return payloadCase_ == PayloadOneofCase.ResourceUpdatedEvent ? (global::Gardarike.ResourceUpdatedEvent) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ResourceUpdatedEvent;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      BuildingPlacedEvent = 1,
      ChatMessageEvent = 2,
      CharacterUpdatedEvent = 3,
      ResourceUpdatedEvent = 4,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BuildingPlacedEvent, other.BuildingPlacedEvent)) return false;
      if (!object.Equals(ChatMessageEvent, other.ChatMessageEvent)) return false;
      if (!object.Equals(CharacterUpdatedEvent, other.CharacterUpdatedEvent)) return false;
      if (!object.Equals(ResourceUpdatedEvent, other.ResourceUpdatedEvent)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.BuildingPlacedEvent) hash ^= BuildingPlacedEvent.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.ChatMessageEvent) hash ^= ChatMessageEvent.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.CharacterUpdatedEvent) hash ^= CharacterUpdatedEvent.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.ResourceUpdatedEvent) hash ^= ResourceUpdatedEvent.GetHashCode();
      hash ^= (int) payloadCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payloadCase_ == PayloadOneofCase.BuildingPlacedEvent) {
        output.WriteRawTag(10);
        output.WriteMessage(BuildingPlacedEvent);
      }
      if (payloadCase_ == PayloadOneofCase.ChatMessageEvent) {
        output.WriteRawTag(18);
        output.WriteMessage(ChatMessageEvent);
      }
      if (payloadCase_ == PayloadOneofCase.CharacterUpdatedEvent) {
        output.WriteRawTag(26);
        output.WriteMessage(CharacterUpdatedEvent);
      }
      if (payloadCase_ == PayloadOneofCase.ResourceUpdatedEvent) {
        output.WriteRawTag(34);
        output.WriteMessage(ResourceUpdatedEvent);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.BuildingPlacedEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuildingPlacedEvent);
      }
      if (payloadCase_ == PayloadOneofCase.ChatMessageEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatMessageEvent);
      }
      if (payloadCase_ == PayloadOneofCase.CharacterUpdatedEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CharacterUpdatedEvent);
      }
      if (payloadCase_ == PayloadOneofCase.ResourceUpdatedEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResourceUpdatedEvent);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.BuildingPlacedEvent:
          BuildingPlacedEvent = other.BuildingPlacedEvent;
          break;
        case PayloadOneofCase.ChatMessageEvent:
          ChatMessageEvent = other.ChatMessageEvent;
          break;
        case PayloadOneofCase.CharacterUpdatedEvent:
          CharacterUpdatedEvent = other.CharacterUpdatedEvent;
          break;
        case PayloadOneofCase.ResourceUpdatedEvent:
          ResourceUpdatedEvent = other.ResourceUpdatedEvent;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::Gardarike.BuildingPlacedEvent subBuilder = new global::Gardarike.BuildingPlacedEvent();
            if (payloadCase_ == PayloadOneofCase.BuildingPlacedEvent) {
              subBuilder.MergeFrom(BuildingPlacedEvent);
            }
            input.ReadMessage(subBuilder);
            BuildingPlacedEvent = subBuilder;
            break;
          }
          case 18: {
            global::Gardarike.NewChatMessageEvent subBuilder = new global::Gardarike.NewChatMessageEvent();
            if (payloadCase_ == PayloadOneofCase.ChatMessageEvent) {
              subBuilder.MergeFrom(ChatMessageEvent);
            }
            input.ReadMessage(subBuilder);
            ChatMessageEvent = subBuilder;
            break;
          }
          case 26: {
            global::Gardarike.CharacterUpdatedEvent subBuilder = new global::Gardarike.CharacterUpdatedEvent();
            if (payloadCase_ == PayloadOneofCase.CharacterUpdatedEvent) {
              subBuilder.MergeFrom(CharacterUpdatedEvent);
            }
            input.ReadMessage(subBuilder);
            CharacterUpdatedEvent = subBuilder;
            break;
          }
          case 34: {
            global::Gardarike.ResourceUpdatedEvent subBuilder = new global::Gardarike.ResourceUpdatedEvent();
            if (payloadCase_ == PayloadOneofCase.ResourceUpdatedEvent) {
              subBuilder.MergeFrom(ResourceUpdatedEvent);
            }
            input.ReadMessage(subBuilder);
            ResourceUpdatedEvent = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResourceUpdatedEvent : pb::IMessage<ResourceUpdatedEvent> {
    private static readonly pb::MessageParser<ResourceUpdatedEvent> _parser = new pb::MessageParser<ResourceUpdatedEvent>(() => new ResourceUpdatedEvent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResourceUpdatedEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceUpdatedEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceUpdatedEvent(ResourceUpdatedEvent other) : this() {
      treesCount_ = other.treesCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceUpdatedEvent Clone() {
      return new ResourceUpdatedEvent(this);
    }

    /// <summary>Field number for the "treesCount" field.</summary>
    public const int TreesCountFieldNumber = 1;
    private long treesCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TreesCount {
      get { return treesCount_; }
      set {
        treesCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResourceUpdatedEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResourceUpdatedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TreesCount != other.TreesCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TreesCount != 0L) hash ^= TreesCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TreesCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(TreesCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TreesCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TreesCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResourceUpdatedEvent other) {
      if (other == null) {
        return;
      }
      if (other.TreesCount != 0L) {
        TreesCount = other.TreesCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            TreesCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CharacterUpdatedEvent : pb::IMessage<CharacterUpdatedEvent> {
    private static readonly pb::MessageParser<CharacterUpdatedEvent> _parser = new pb::MessageParser<CharacterUpdatedEvent>(() => new CharacterUpdatedEvent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CharacterUpdatedEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharacterUpdatedEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharacterUpdatedEvent(CharacterUpdatedEvent other) : this() {
      NewState = other.newState_ != null ? other.NewState.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharacterUpdatedEvent Clone() {
      return new CharacterUpdatedEvent(this);
    }

    /// <summary>Field number for the "newState" field.</summary>
    public const int NewStateFieldNumber = 1;
    private global::Gardarike.Character newState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.Character NewState {
      get { return newState_; }
      set {
        newState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CharacterUpdatedEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CharacterUpdatedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NewState, other.NewState)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (newState_ != null) hash ^= NewState.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (newState_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NewState);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (newState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewState);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CharacterUpdatedEvent other) {
      if (other == null) {
        return;
      }
      if (other.newState_ != null) {
        if (newState_ == null) {
          newState_ = new global::Gardarike.Character();
        }
        NewState.MergeFrom(other.NewState);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (newState_ == null) {
              newState_ = new global::Gardarike.Character();
            }
            input.ReadMessage(newState_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BuildingPlacedEvent : pb::IMessage<BuildingPlacedEvent> {
    private static readonly pb::MessageParser<BuildingPlacedEvent> _parser = new pb::MessageParser<BuildingPlacedEvent>(() => new BuildingPlacedEvent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildingPlacedEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingPlacedEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingPlacedEvent(BuildingPlacedEvent other) : this() {
      buildingID_ = other.buildingID_;
      ownerID_ = other.ownerID_;
      Location = other.location_ != null ? other.Location.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingPlacedEvent Clone() {
      return new BuildingPlacedEvent(this);
    }

    /// <summary>Field number for the "buildingID" field.</summary>
    public const int BuildingIDFieldNumber = 1;
    private long buildingID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BuildingID {
      get { return buildingID_; }
      set {
        buildingID_ = value;
      }
    }

    /// <summary>Field number for the "ownerID" field.</summary>
    public const int OwnerIDFieldNumber = 2;
    private long ownerID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OwnerID {
      get { return ownerID_; }
      set {
        ownerID_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 3;
    private global::Gardarike.Vector3D location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.Vector3D Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildingPlacedEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildingPlacedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BuildingID != other.BuildingID) return false;
      if (OwnerID != other.OwnerID) return false;
      if (!object.Equals(Location, other.Location)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BuildingID != 0L) hash ^= BuildingID.GetHashCode();
      if (OwnerID != 0L) hash ^= OwnerID.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BuildingID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BuildingID);
      }
      if (OwnerID != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OwnerID);
      }
      if (location_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BuildingID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BuildingID);
      }
      if (OwnerID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OwnerID);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildingPlacedEvent other) {
      if (other == null) {
        return;
      }
      if (other.BuildingID != 0L) {
        BuildingID = other.BuildingID;
      }
      if (other.OwnerID != 0L) {
        OwnerID = other.OwnerID;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          location_ = new global::Gardarike.Vector3D();
        }
        Location.MergeFrom(other.Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            BuildingID = input.ReadInt64();
            break;
          }
          case 16: {
            OwnerID = input.ReadInt64();
            break;
          }
          case 26: {
            if (location_ == null) {
              location_ = new global::Gardarike.Vector3D();
            }
            input.ReadMessage(location_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewChatMessageEvent : pb::IMessage<NewChatMessageEvent> {
    private static readonly pb::MessageParser<NewChatMessageEvent> _parser = new pb::MessageParser<NewChatMessageEvent>(() => new NewChatMessageEvent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewChatMessageEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewChatMessageEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewChatMessageEvent(NewChatMessageEvent other) : this() {
      Message = other.message_ != null ? other.Message.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewChatMessageEvent Clone() {
      return new NewChatMessageEvent(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private global::Gardarike.ChatMessage message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.ChatMessage Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewChatMessageEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewChatMessageEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Message, other.Message)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (message_ != null) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (message_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewChatMessageEvent other) {
      if (other == null) {
        return;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          message_ = new global::Gardarike.ChatMessage();
        }
        Message.MergeFrom(other.Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (message_ == null) {
              message_ = new global::Gardarike.ChatMessage();
            }
            input.ReadMessage(message_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Vector3D : pb::IMessage<Vector3D> {
    private static readonly pb::MessageParser<Vector3D> _parser = new pb::MessageParser<Vector3D>(() => new Vector3D());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector3D> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3D() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3D(Vector3D other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3D Clone() {
      return new Vector3D(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector3D);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector3D other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Z != other.Z) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= X.GetHashCode();
      if (Y != 0F) hash ^= Y.GetHashCode();
      if (Z != 0F) hash ^= Z.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector3D other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Map represents the game map. Map consists of 3D points.
  /// </summary>
  public sealed partial class Map : pb::IMessage<Map> {
    private static readonly pb::MessageParser<Map> _parser = new pb::MessageParser<Map>(() => new Map());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Map> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Map() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Map(Map other) : this() {
      width_ = other.width_;
      height_ = other.height_;
      points_ = other.points_.Clone();
      buildings_ = other.buildings_.Clone();
      treesCount_ = other.treesCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Map Clone() {
      return new Map(this);
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 1;
    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "points" field.</summary>
    public const int PointsFieldNumber = 3;
    private static readonly pb::FieldCodec<float> _repeated_points_codec
        = pb::FieldCodec.ForFloat(26);
    private readonly pbc::RepeatedField<float> points_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Points {
      get { return points_; }
    }

    /// <summary>Field number for the "buildings" field.</summary>
    public const int BuildingsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Gardarike.Building> _repeated_buildings_codec
        = pb::FieldCodec.ForMessage(34, global::Gardarike.Building.Parser);
    private readonly pbc::RepeatedField<global::Gardarike.Building> buildings_ = new pbc::RepeatedField<global::Gardarike.Building>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gardarike.Building> Buildings {
      get { return buildings_; }
    }

    /// <summary>Field number for the "treesCount" field.</summary>
    public const int TreesCountFieldNumber = 5;
    private long treesCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TreesCount {
      get { return treesCount_; }
      set {
        treesCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Map);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Map other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if(!points_.Equals(other.points_)) return false;
      if(!buildings_.Equals(other.buildings_)) return false;
      if (TreesCount != other.TreesCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      hash ^= points_.GetHashCode();
      hash ^= buildings_.GetHashCode();
      if (TreesCount != 0L) hash ^= TreesCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Width != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      points_.WriteTo(output, _repeated_points_codec);
      buildings_.WriteTo(output, _repeated_buildings_codec);
      if (TreesCount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TreesCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      size += points_.CalculateSize(_repeated_points_codec);
      size += buildings_.CalculateSize(_repeated_buildings_codec);
      if (TreesCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TreesCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Map other) {
      if (other == null) {
        return;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      points_.Add(other.points_);
      buildings_.Add(other.buildings_);
      if (other.TreesCount != 0L) {
        TreesCount = other.TreesCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Width = input.ReadInt32();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
          case 26:
          case 29: {
            points_.AddEntriesFrom(input, _repeated_points_codec);
            break;
          }
          case 34: {
            buildings_.AddEntriesFrom(input, _repeated_buildings_codec);
            break;
          }
          case 40: {
            TreesCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Building : pb::IMessage<Building> {
    private static readonly pb::MessageParser<Building> _parser = new pb::MessageParser<Building>(() => new Building());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Building> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Building() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Building(Building other) : this() {
      id_ = other.id_;
      ownerID_ = other.ownerID_;
      Location = other.location_ != null ? other.Location.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Building Clone() {
      return new Building(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ownerID" field.</summary>
    public const int OwnerIDFieldNumber = 3;
    private long ownerID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OwnerID {
      get { return ownerID_; }
      set {
        ownerID_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 4;
    private global::Gardarike.Vector3D location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.Vector3D Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Building);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Building other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OwnerID != other.OwnerID) return false;
      if (!object.Equals(Location, other.Location)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (OwnerID != 0L) hash ^= OwnerID.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (OwnerID != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(OwnerID);
      }
      if (location_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (OwnerID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OwnerID);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Building other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.OwnerID != 0L) {
        OwnerID = other.OwnerID;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          location_ = new global::Gardarike.Vector3D();
        }
        Location.MergeFrom(other.Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 24: {
            OwnerID = input.ReadInt64();
            break;
          }
          case 34: {
            if (location_ == null) {
              location_ = new global::Gardarike.Vector3D();
            }
            input.ReadMessage(location_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMapResponse : pb::IMessage<GetMapResponse> {
    private static readonly pb::MessageParser<GetMapResponse> _parser = new pb::MessageParser<GetMapResponse>(() => new GetMapResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMapResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMapResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMapResponse(GetMapResponse other) : this() {
      Map = other.map_ != null ? other.Map.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMapResponse Clone() {
      return new GetMapResponse(this);
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 1;
    private global::Gardarike.Map map_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.Map Map {
      get { return map_; }
      set {
        map_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMapResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMapResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Map, other.Map)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (map_ != null) hash ^= Map.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (map_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Map);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (map_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Map);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMapResponse other) {
      if (other == null) {
        return;
      }
      if (other.map_ != null) {
        if (map_ == null) {
          map_ = new global::Gardarike.Map();
        }
        Map.MergeFrom(other.Map);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (map_ == null) {
              map_ = new global::Gardarike.Map();
            }
            input.ReadMessage(map_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MapChunk : pb::IMessage<MapChunk> {
    private static readonly pb::MessageParser<MapChunk> _parser = new pb::MessageParser<MapChunk>(() => new MapChunk());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MapChunk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapChunk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapChunk(MapChunk other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MapChunk Clone() {
      return new MapChunk(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MapChunk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MapChunk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MapChunk other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class Vector3 : pb::IMessage<Vector3> {
    private static readonly pb::MessageParser<Vector3> _parser = new pb::MessageParser<Vector3>(() => new Vector3());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3(Vector3 other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3 Clone() {
      return new Vector3(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector3 other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class Handshake : pb::IMessage<Handshake> {
    private static readonly pb::MessageParser<Handshake> _parser = new pb::MessageParser<Handshake>(() => new Handshake());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Handshake> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Handshake() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Handshake(Handshake other) : this() {
      login_ = other.login_;
      password_ = other.password_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Handshake Clone() {
      return new Handshake(this);
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 1;
    private string login_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Login {
      get { return login_; }
      set {
        login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Handshake);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Handshake other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Login != other.Login) return false;
      if (Password != other.Password) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Login.Length != 0) hash ^= Login.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Login.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Login);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Login.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Login);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Handshake other) {
      if (other == null) {
        return;
      }
      if (other.Login.Length != 0) {
        Login = other.Login;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Login = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Character : pb::IMessage<Character> {
    private static readonly pb::MessageParser<Character> _parser = new pb::MessageParser<Character>(() => new Character());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Character> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Character() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Character(Character other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      gold_ = other.gold_;
      maxPopulation_ = other.maxPopulation_;
      currentPopulation_ = other.currentPopulation_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Character Clone() {
      return new Character(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 3;
    private ulong gold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    /// <summary>Field number for the "maxPopulation" field.</summary>
    public const int MaxPopulationFieldNumber = 4;
    private ulong maxPopulation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MaxPopulation {
      get { return maxPopulation_; }
      set {
        maxPopulation_ = value;
      }
    }

    /// <summary>Field number for the "currentPopulation" field.</summary>
    public const int CurrentPopulationFieldNumber = 5;
    private ulong currentPopulation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CurrentPopulation {
      get { return currentPopulation_; }
      set {
        currentPopulation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Character);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Character other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Gold != other.Gold) return false;
      if (MaxPopulation != other.MaxPopulation) return false;
      if (CurrentPopulation != other.CurrentPopulation) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Gold != 0UL) hash ^= Gold.GetHashCode();
      if (MaxPopulation != 0UL) hash ^= MaxPopulation.GetHashCode();
      if (CurrentPopulation != 0UL) hash ^= CurrentPopulation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Gold != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Gold);
      }
      if (MaxPopulation != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(MaxPopulation);
      }
      if (CurrentPopulation != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(CurrentPopulation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Gold != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gold);
      }
      if (MaxPopulation != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxPopulation);
      }
      if (CurrentPopulation != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CurrentPopulation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Character other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Gold != 0UL) {
        Gold = other.Gold;
      }
      if (other.MaxPopulation != 0UL) {
        MaxPopulation = other.MaxPopulation;
      }
      if (other.CurrentPopulation != 0UL) {
        CurrentPopulation = other.CurrentPopulation;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Gold = input.ReadUInt64();
            break;
          }
          case 32: {
            MaxPopulation = input.ReadUInt64();
            break;
          }
          case 40: {
            CurrentPopulation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
