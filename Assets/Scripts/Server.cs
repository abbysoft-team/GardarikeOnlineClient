// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Gardarike {

  /// <summary>Holder for reflection information generated from server.proto</summary>
  public static partial class ServerReflection {

    #region Descriptor
    /// <summary>File descriptor for server.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzZXJ2ZXIucHJvdG8SCUdhcmRhcmlrZSKVBQoHUmVxdWVzdBI7ChJnZXRM",
            "b2NhbE1hcFJlcXVlc3QYASABKAsyHS5HYXJkYXJpa2UuR2V0TG9jYWxNYXBS",
            "ZXF1ZXN0SAASOwoSR2V0V29ybGRNYXBSZXF1ZXN0GAIgASgLMh0uR2FyZGFy",
            "aWtlLkdldFdvcmxkTWFwUmVxdWVzdEgAEi8KDGxvZ2luUmVxdWVzdBgDIAEo",
            "CzIXLkdhcmRhcmlrZS5Mb2dpblJlcXVlc3RIABJDChZTZWxlY3RDaGFyYWN0",
            "ZXJSZXF1ZXN0GAQgASgLMiEuR2FyZGFyaWtlLlNlbGVjdENoYXJhY3RlclJl",
            "cXVlc3RIABI3ChBwbGFjZVRvd25SZXF1ZXN0GAUgASgLMhsuR2FyZGFyaWtl",
            "LlBsYWNlVG93blJlcXVlc3RIABJDChZzZW5kQ2hhdE1lc3NhZ2VSZXF1ZXN0",
            "GAYgASgLMiEuR2FyZGFyaWtlLlNlbmRDaGF0TWVzc2FnZVJlcXVlc3RIABJB",
            "ChVnZXRDaGF0SGlzdG9yeVJlcXVlc3QYByABKAsyIC5HYXJkYXJpa2UuR2V0",
            "Q2hhdEhpc3RvcnlSZXF1ZXN0SAASSwoaZ2V0V29ya0Rpc3RyaWJ1dGlvblJl",
            "cXVlc3QYCCABKAsyJS5HYXJkYXJpa2UuR2V0V29ya0Rpc3RyaWJ1dGlvblJl",
            "cXVlc3RIABI/ChRjcmVhdGVBY2NvdW50UmVxdWVzdBgJIAEoCzIfLkdhcmRh",
            "cmlrZS5DcmVhdGVBY2NvdW50UmVxdWVzdEgAEkMKFmNyZWF0ZUNoYXJhY3Rl",
            "clJlcXVlc3QYCiABKAsyIS5HYXJkYXJpa2UuQ3JlYXRlQ2hhcmFjdGVyUmVx",
            "dWVzdEgAQgYKBGRhdGEiOQoWQ3JlYXRlQ2hhcmFjdGVyUmVxdWVzdBIRCglz",
            "ZXNzaW9uSUQYASABKAkSDAoEbmFtZRgCIAEoCSI3ChRDcmVhdGVBY2NvdW50",
            "UmVxdWVzdBINCgVsb2dpbhgCIAEoCRIQCghwYXNzd29yZBgDIAEoCSJaChBQ",
            "bGFjZVRvd25SZXF1ZXN0EhEKCXNlc3Npb25JRBgBIAEoCRIlCghsb2NhdGlv",
            "bhgCIAEoCzITLkdhcmRhcmlrZS5WZWN0b3IyRBIMCgRuYW1lGAMgASgJIi8K",
            "GkdldFdvcmtEaXN0cmlidXRpb25SZXF1ZXN0EhEKCXNlc3Npb25JRBgBIAEo",
            "CSJJChVHZXRDaGF0SGlzdG9yeVJlcXVlc3QSEQoJc2Vzc2lvbklEGAEgASgJ",
            "Eg4KBm9mZnNldBgCIAEoBBINCgVjb3VudBgDIAEoBCI5ChZTZW5kQ2hhdE1l",
            "c3NhZ2VSZXF1ZXN0EhEKCXNlc3Npb25JRBgBIAEoCRIMCgR0ZXh0GAIgASgJ",
            "Ik4KEkdldFdvcmxkTWFwUmVxdWVzdBIRCglzZXNzaW9uSUQYASABKAkSJQoI",
            "bG9jYXRpb24YAiABKAsyEy5HYXJkYXJpa2UuVmVjdG9yM0QiJwoSR2V0TG9j",
            "YWxNYXBSZXF1ZXN0EhEKCXNlc3Npb25JRBgBIAEoCSIyCgxMb2dpblJlcXVl",
            "c3QSEAoIdXNlcm5hbWUYASABKAkSEAoIcGFzc3dvcmQYAiABKAkiQAoWU2Vs",
            "ZWN0Q2hhcmFjdGVyUmVxdWVzdBIRCglzZXNzaW9uSUQYASABKAkSEwoLY2hh",
            "cmFjdGVySUQYAiABKAMi5QYKCFJlc3BvbnNlEjEKDWVycm9yUmVzcG9uc2UY",
            "ASABKAsyGC5HYXJkYXJpa2UuRXJyb3JSZXNwb25zZUgAEj0KE2dldExvY2Fs",
            "TWFwUmVzcG9uc2UYAiABKAsyHi5HYXJkYXJpa2UuR2V0TG9jYWxNYXBSZXNw",
            "b25zZUgAEj0KE2dldFdvcmxkTWFwUmVzcG9uc2UYAyABKAsyHi5HYXJkYXJp",
            "a2UuR2V0V29ybGRNYXBSZXNwb25zZUgAEjEKDWxvZ2luUmVzcG9uc2UYBCAB",
            "KAsyGC5HYXJkYXJpa2UuTG9naW5SZXNwb25zZUgAEjkKEW11bHRpcGFydFJl",
            "c3BvbnNlGAUgASgLMhwuR2FyZGFyaWtlLk11bHRpcGFydFJlc3BvbnNlSAAS",
            "RQoXU2VsZWN0Q2hhcmFjdGVyUmVzcG9uc2UYBiABKAsyIi5HYXJkYXJpa2Uu",
            "U2VsZWN0Q2hhcmFjdGVyUmVzcG9uc2VIABI5ChFwbGFjZVRvd25SZXNwb25z",
            "ZRgHIAEoCzIcLkdhcmRhcmlrZS5QbGFjZVRvd25SZXNwb25zZUgAEkUKF3Nl",
            "bmRDaGF0TWVzc2FnZVJlc3BvbnNlGAggASgLMiIuR2FyZGFyaWtlLlNlbmRD",
            "aGF0TWVzc2FnZVJlc3BvbnNlSAASQwoWZ2V0Q2hhdEhpc3RvcnlSZXNwb25z",
            "ZRgJIAEoCzIhLkdhcmRhcmlrZS5HZXRDaGF0SGlzdG9yeVJlc3BvbnNlSAAS",
            "SwoaY2hhdE1lc3NhZ2VQdWJsaXNoUmVzcG9uc2UYCiABKAsyJS5HYXJkYXJp",
            "a2UuQ2hhdE1lc3NhZ2VQdWJsaXNoUmVzcG9uc2VIABJNChtnZXRXb3JrRGlz",
            "dHJpYnV0aW9uUmVzcG9uc2UYCyABKAsyJi5HYXJkYXJpa2UuR2V0V29ya0Rp",
            "c3RyaWJ1dGlvblJlc3BvbnNlSAASQQoVY3JlYXRlQWNjb3VudFJlc3BvbnNl",
            "GAwgASgLMiAuR2FyZGFyaWtlLkNyZWF0ZUFjY291bnRSZXNwb25zZUgAEkUK",
            "F2NyZWF0ZUNoYXJhY3RlclJlc3BvbnNlGA0gASgLMiIuR2FyZGFyaWtlLkNy",
            "ZWF0ZUNoYXJhY3RlclJlc3BvbnNlSABCBgoEZGF0YSIlChdDcmVhdGVDaGFy",
            "YWN0ZXJSZXNwb25zZRIKCgJpZBgBIAEoAyIjChVDcmVhdGVBY2NvdW50UmVz",
            "cG9uc2USCgoCaWQYASABKAMiSQobR2V0V29ya0Rpc3RyaWJ1dGlvblJlc3Bv",
            "bnNlEhEKCWlkbGVDb3VudBgBIAEoBBIXCg93b29kY3V0dGVyQ291bnQYAiAB",
            "KAQiHAoaQ2hhdE1lc3NhZ2VQdWJsaXNoUmVzcG9uc2UiQgoWR2V0Q2hhdEhp",
            "c3RvcnlSZXNwb25zZRIoCghtZXNzYWdlcxgBIAMoCzIWLkdhcmRhcmlrZS5D",
            "aGF0TWVzc2FnZSIsChdTZW5kQ2hhdE1lc3NhZ2VSZXNwb25zZRIRCgltZXNz",
            "YWdlSUQYASABKAMiEwoRUGxhY2VUb3duUmVzcG9uc2UiIgoRTXVsdGlwYXJ0",
            "UmVzcG9uc2USDQoFcGFydHMYASABKAMiTAoNTG9naW5SZXNwb25zZRIRCglz",
            "ZXNzaW9uSUQYASABKAkSKAoKY2hhcmFjdGVycxgCIAMoCzIULkdhcmRhcmlr",
            "ZS5DaGFyYWN0ZXIiQAoNRXJyb3JSZXNwb25zZRIPCgdtZXNzYWdlGAEgASgJ",
            "Eh4KBGNvZGUYAiABKA4yEC5HYXJkYXJpa2UuRXJyb3IiOQoXU2VsZWN0Q2hh",
            "cmFjdGVyUmVzcG9uc2USHgoFdG93bnMYASADKAsyDy5HYXJkYXJpa2UuVG93",
            "biI3CgtDaGF0TWVzc2FnZRIKCgJpZBgBIAEoAxIOCgZzZW5kZXIYAiABKAkS",
            "DAoEdGV4dBgDIAEoCSJOCgVFdmVudBI6ChBjaGF0TWVzc2FnZUV2ZW50GAEg",
            "ASgLMh4uR2FyZGFyaWtlLk5ld0NoYXRNZXNzYWdlRXZlbnRIAEIJCgdwYXls",
            "b2FkIj4KE05ld0NoYXRNZXNzYWdlRXZlbnQSJwoHbWVzc2FnZRgBIAEoCzIW",
            "LkdhcmRhcmlrZS5DaGF0TWVzc2FnZSIrCghWZWN0b3IzRBIJCgF4GAEgASgC",
            "EgkKAXkYAiABKAISCQoBehgDIAEoAiIgCghWZWN0b3IyRBIJCgF4GAEgASgD",
            "EgkKAXkYAiABKAMiMgoITG9jYWxNYXASJgoJYnVpbGRpbmdzGAQgAygLMhMu",
            "R2FyZGFyaWtlLkJ1aWxkaW5nIrIBCg1Xb3JsZE1hcENodW5rEgkKAXgYASAB",
            "KAMSCQoBeRgCIAEoAxINCgV3aWR0aBgDIAEoBRIOCgZoZWlnaHQYBCABKAUS",
            "DAoEZGF0YRgFIAMoAhIeCgV0b3ducxgGIAMoCzIPLkdhcmRhcmlrZS5Ub3du",
            "Eg0KBXRyZWVzGAcgASgEEg4KBnN0b25lcxgIIAEoBBIPCgdhbmltYWxzGAkg",
            "ASgEEg4KBnBsYW50cxgKIAEoBCJRCgRUb3duEgkKAXgYASABKAMSCQoBeRgC",
            "IAEoAxIMCgRuYW1lGAMgASgJEhEKCW93bmVyTmFtZRgEIAEoCRISCgpwb3B1",
            "bGF0aW9uGAUgASgEIj0KCEJ1aWxkaW5nEgoKAmlkGAEgASgDEiUKCGxvY2F0",
            "aW9uGAIgASgLMhMuR2FyZGFyaWtlLlZlY3RvcjNEIjcKE0dldExvY2FsTWFw",
            "UmVzcG9uc2USIAoDbWFwGAEgASgLMhMuR2FyZGFyaWtlLkxvY2FsTWFwIjwK",
            "E0dldFdvcmxkTWFwUmVzcG9uc2USJQoDbWFwGAEgASgLMhguR2FyZGFyaWtl",
            "LldvcmxkTWFwQ2h1bmsiVwoJQ2hhcmFjdGVyEgoKAmlkGAEgASgDEgwKBG5h",
            "bWUYAiABKAkSFQoNbWF4UG9wdWxhdGlvbhgDIAEoBBIZChFjdXJyZW50UG9w",
            "dWxhdGlvbhgEIAEoBCrjAQoFRXJyb3ISCwoHVU5LTk9XThAAEhkKFUlOVEVS",
            "TkFMX1NFUlZFUl9FUlJPUhABEhQKEElOVkFMSURfUEFTU1dPUkQQAhISCg5O",
            "T1RfQVVUSE9SSVpFRBADEhcKE0NIQVJBQ1RFUl9OT1RfRk9VTkQQBBIPCgtC",
            "QURfUkVRVUVTVBAFEhoKFkNIQVJBQ1RFUl9OT1RfU0VMRUNURUQQBhIUChBN",
            "RVNTQUdFX1RPT19MT05HEAcSHQoZVVNFUk5BTUVfSVNfQUxSRUFEWV9UQUtF",
            "ThAIEg0KCUZPUkJJRERFThAJMuEFCgpHYW1lU2VydmVyEkwKC0dldFdvcmxk",
            "TWFwEh0uR2FyZGFyaWtlLkdldFdvcmxkTWFwUmVxdWVzdBoeLkdhcmRhcmlr",
            "ZS5HZXRXb3JsZE1hcFJlc3BvbnNlEksKC0dldExvY2FsTWFwEh0uR2FyZGFy",
            "aWtlLkdldExvY2FsTWFwUmVxdWVzdBodLkdhcmRhcmlrZS5HZXRMb2NhbE1h",
            "cFJlcXVlc3QSOgoFTG9naW4SFy5HYXJkYXJpa2UuTG9naW5SZXF1ZXN0Ghgu",
            "R2FyZGFyaWtlLkxvZ2luUmVzcG9uc2USWAoPU2VsZWN0Q2hhcmFjdGVyEiEu",
            "R2FyZGFyaWtlLlNlbGVjdENoYXJhY3RlclJlcXVlc3QaIi5HYXJkYXJpa2Uu",
            "U2VsZWN0Q2hhcmFjdGVyUmVzcG9uc2USRgoJUGxhY2VUb3duEhsuR2FyZGFy",
            "aWtlLlBsYWNlVG93blJlcXVlc3QaHC5HYXJkYXJpa2UuUGxhY2VUb3duUmVz",
            "cG9uc2USWAoPU2VuZENoYXRNZXNzYWdlEiEuR2FyZGFyaWtlLlNlbmRDaGF0",
            "TWVzc2FnZVJlcXVlc3QaIi5HYXJkYXJpa2UuU2VuZENoYXRNZXNzYWdlUmVz",
            "cG9uc2USVQoOR2V0Q2hhdEhpc3RvcnkSIC5HYXJkYXJpa2UuR2V0Q2hhdEhp",
            "c3RvcnlSZXF1ZXN0GiEuR2FyZGFyaWtlLkdldENoYXRIaXN0b3J5UmVzcG9u",
            "c2USUgoNQ3JlYXRlQWNjb3VudBIfLkdhcmRhcmlrZS5DcmVhdGVBY2NvdW50",
            "UmVxdWVzdBogLkdhcmRhcmlrZS5DcmVhdGVBY2NvdW50UmVzcG9uc2USVQoM",
            "Q3JlYXRlRW1waXJlEiEuR2FyZGFyaWtlLkNyZWF0ZUNoYXJhY3RlclJlcXVl",
            "c3QaIi5HYXJkYXJpa2UuQ3JlYXRlQ2hhcmFjdGVyUmVzcG9uc2VCB1oFLjty",
            "cGNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Gardarike.Error), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Request), global::Gardarike.Request.Parser, new[]{ "GetLocalMapRequest", "GetWorldMapRequest", "LoginRequest", "SelectCharacterRequest", "PlaceTownRequest", "SendChatMessageRequest", "GetChatHistoryRequest", "GetWorkDistributionRequest", "CreateAccountRequest", "CreateCharacterRequest" }, new[]{ "Data" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.CreateCharacterRequest), global::Gardarike.CreateCharacterRequest.Parser, new[]{ "SessionID", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.CreateAccountRequest), global::Gardarike.CreateAccountRequest.Parser, new[]{ "Login", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.PlaceTownRequest), global::Gardarike.PlaceTownRequest.Parser, new[]{ "SessionID", "Location", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.GetWorkDistributionRequest), global::Gardarike.GetWorkDistributionRequest.Parser, new[]{ "SessionID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.GetChatHistoryRequest), global::Gardarike.GetChatHistoryRequest.Parser, new[]{ "SessionID", "Offset", "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.SendChatMessageRequest), global::Gardarike.SendChatMessageRequest.Parser, new[]{ "SessionID", "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.GetWorldMapRequest), global::Gardarike.GetWorldMapRequest.Parser, new[]{ "SessionID", "Location" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.GetLocalMapRequest), global::Gardarike.GetLocalMapRequest.Parser, new[]{ "SessionID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.LoginRequest), global::Gardarike.LoginRequest.Parser, new[]{ "Username", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.SelectCharacterRequest), global::Gardarike.SelectCharacterRequest.Parser, new[]{ "SessionID", "CharacterID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Response), global::Gardarike.Response.Parser, new[]{ "ErrorResponse", "GetLocalMapResponse", "GetWorldMapResponse", "LoginResponse", "MultipartResponse", "SelectCharacterResponse", "PlaceTownResponse", "SendChatMessageResponse", "GetChatHistoryResponse", "ChatMessagePublishResponse", "GetWorkDistributionResponse", "CreateAccountResponse", "CreateCharacterResponse" }, new[]{ "Data" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.CreateCharacterResponse), global::Gardarike.CreateCharacterResponse.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.CreateAccountResponse), global::Gardarike.CreateAccountResponse.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.GetWorkDistributionResponse), global::Gardarike.GetWorkDistributionResponse.Parser, new[]{ "IdleCount", "WoodcutterCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.ChatMessagePublishResponse), global::Gardarike.ChatMessagePublishResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.GetChatHistoryResponse), global::Gardarike.GetChatHistoryResponse.Parser, new[]{ "Messages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.SendChatMessageResponse), global::Gardarike.SendChatMessageResponse.Parser, new[]{ "MessageID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.PlaceTownResponse), global::Gardarike.PlaceTownResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.MultipartResponse), global::Gardarike.MultipartResponse.Parser, new[]{ "Parts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.LoginResponse), global::Gardarike.LoginResponse.Parser, new[]{ "SessionID", "Characters" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.ErrorResponse), global::Gardarike.ErrorResponse.Parser, new[]{ "Message", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.SelectCharacterResponse), global::Gardarike.SelectCharacterResponse.Parser, new[]{ "Towns" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.ChatMessage), global::Gardarike.ChatMessage.Parser, new[]{ "Id", "Sender", "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Event), global::Gardarike.Event.Parser, new[]{ "ChatMessageEvent" }, new[]{ "Payload" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.NewChatMessageEvent), global::Gardarike.NewChatMessageEvent.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Vector3D), global::Gardarike.Vector3D.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Vector2D), global::Gardarike.Vector2D.Parser, new[]{ "X", "Y" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.LocalMap), global::Gardarike.LocalMap.Parser, new[]{ "Buildings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.WorldMapChunk), global::Gardarike.WorldMapChunk.Parser, new[]{ "X", "Y", "Width", "Height", "Data", "Towns", "Trees", "Stones", "Animals", "Plants" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Town), global::Gardarike.Town.Parser, new[]{ "X", "Y", "Name", "OwnerName", "Population" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Building), global::Gardarike.Building.Parser, new[]{ "Id", "Location" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.GetLocalMapResponse), global::Gardarike.GetLocalMapResponse.Parser, new[]{ "Map" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.GetWorldMapResponse), global::Gardarike.GetWorldMapResponse.Parser, new[]{ "Map" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Gardarike.Character), global::Gardarike.Character.Parser, new[]{ "Id", "Name", "MaxPopulation", "CurrentPopulation" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Error {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("INTERNAL_SERVER_ERROR")] InternalServerError = 1,
    [pbr::OriginalName("INVALID_PASSWORD")] InvalidPassword = 2,
    [pbr::OriginalName("NOT_AUTHORIZED")] NotAuthorized = 3,
    [pbr::OriginalName("CHARACTER_NOT_FOUND")] CharacterNotFound = 4,
    [pbr::OriginalName("BAD_REQUEST")] BadRequest = 5,
    [pbr::OriginalName("CHARACTER_NOT_SELECTED")] CharacterNotSelected = 6,
    [pbr::OriginalName("MESSAGE_TOO_LONG")] MessageTooLong = 7,
    [pbr::OriginalName("USERNAME_IS_ALREADY_TAKEN")] UsernameIsAlreadyTaken = 8,
    [pbr::OriginalName("FORBIDDEN")] Forbidden = 9,
  }

  #endregion

  #region Messages
  /// <summary>
  ///  Requests
  /// </summary>
  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      switch (other.DataCase) {
        case DataOneofCase.GetLocalMapRequest:
          GetLocalMapRequest = other.GetLocalMapRequest.Clone();
          break;
        case DataOneofCase.GetWorldMapRequest:
          GetWorldMapRequest = other.GetWorldMapRequest.Clone();
          break;
        case DataOneofCase.LoginRequest:
          LoginRequest = other.LoginRequest.Clone();
          break;
        case DataOneofCase.SelectCharacterRequest:
          SelectCharacterRequest = other.SelectCharacterRequest.Clone();
          break;
        case DataOneofCase.PlaceTownRequest:
          PlaceTownRequest = other.PlaceTownRequest.Clone();
          break;
        case DataOneofCase.SendChatMessageRequest:
          SendChatMessageRequest = other.SendChatMessageRequest.Clone();
          break;
        case DataOneofCase.GetChatHistoryRequest:
          GetChatHistoryRequest = other.GetChatHistoryRequest.Clone();
          break;
        case DataOneofCase.GetWorkDistributionRequest:
          GetWorkDistributionRequest = other.GetWorkDistributionRequest.Clone();
          break;
        case DataOneofCase.CreateAccountRequest:
          CreateAccountRequest = other.CreateAccountRequest.Clone();
          break;
        case DataOneofCase.CreateCharacterRequest:
          CreateCharacterRequest = other.CreateCharacterRequest.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "getLocalMapRequest" field.</summary>
    public const int GetLocalMapRequestFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.GetLocalMapRequest GetLocalMapRequest {
      get { return dataCase_ == DataOneofCase.GetLocalMapRequest ? (global::Gardarike.GetLocalMapRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GetLocalMapRequest;
      }
    }

    /// <summary>Field number for the "GetWorldMapRequest" field.</summary>
    public const int GetWorldMapRequestFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.GetWorldMapRequest GetWorldMapRequest {
      get { return dataCase_ == DataOneofCase.GetWorldMapRequest ? (global::Gardarike.GetWorldMapRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GetWorldMapRequest;
      }
    }

    /// <summary>Field number for the "loginRequest" field.</summary>
    public const int LoginRequestFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.LoginRequest LoginRequest {
      get { return dataCase_ == DataOneofCase.LoginRequest ? (global::Gardarike.LoginRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.LoginRequest;
      }
    }

    /// <summary>Field number for the "SelectCharacterRequest" field.</summary>
    public const int SelectCharacterRequestFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.SelectCharacterRequest SelectCharacterRequest {
      get { return dataCase_ == DataOneofCase.SelectCharacterRequest ? (global::Gardarike.SelectCharacterRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.SelectCharacterRequest;
      }
    }

    /// <summary>Field number for the "placeTownRequest" field.</summary>
    public const int PlaceTownRequestFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.PlaceTownRequest PlaceTownRequest {
      get { return dataCase_ == DataOneofCase.PlaceTownRequest ? (global::Gardarike.PlaceTownRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.PlaceTownRequest;
      }
    }

    /// <summary>Field number for the "sendChatMessageRequest" field.</summary>
    public const int SendChatMessageRequestFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.SendChatMessageRequest SendChatMessageRequest {
      get { return dataCase_ == DataOneofCase.SendChatMessageRequest ? (global::Gardarike.SendChatMessageRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.SendChatMessageRequest;
      }
    }

    /// <summary>Field number for the "getChatHistoryRequest" field.</summary>
    public const int GetChatHistoryRequestFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.GetChatHistoryRequest GetChatHistoryRequest {
      get { return dataCase_ == DataOneofCase.GetChatHistoryRequest ? (global::Gardarike.GetChatHistoryRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GetChatHistoryRequest;
      }
    }

    /// <summary>Field number for the "getWorkDistributionRequest" field.</summary>
    public const int GetWorkDistributionRequestFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.GetWorkDistributionRequest GetWorkDistributionRequest {
      get { return dataCase_ == DataOneofCase.GetWorkDistributionRequest ? (global::Gardarike.GetWorkDistributionRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GetWorkDistributionRequest;
      }
    }

    /// <summary>Field number for the "createAccountRequest" field.</summary>
    public const int CreateAccountRequestFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.CreateAccountRequest CreateAccountRequest {
      get { return dataCase_ == DataOneofCase.CreateAccountRequest ? (global::Gardarike.CreateAccountRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.CreateAccountRequest;
      }
    }

    /// <summary>Field number for the "createCharacterRequest" field.</summary>
    public const int CreateCharacterRequestFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.CreateCharacterRequest CreateCharacterRequest {
      get { return dataCase_ == DataOneofCase.CreateCharacterRequest ? (global::Gardarike.CreateCharacterRequest) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.CreateCharacterRequest;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      GetLocalMapRequest = 1,
      GetWorldMapRequest = 2,
      LoginRequest = 3,
      SelectCharacterRequest = 4,
      PlaceTownRequest = 5,
      SendChatMessageRequest = 6,
      GetChatHistoryRequest = 7,
      GetWorkDistributionRequest = 8,
      CreateAccountRequest = 9,
      CreateCharacterRequest = 10,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GetLocalMapRequest, other.GetLocalMapRequest)) return false;
      if (!object.Equals(GetWorldMapRequest, other.GetWorldMapRequest)) return false;
      if (!object.Equals(LoginRequest, other.LoginRequest)) return false;
      if (!object.Equals(SelectCharacterRequest, other.SelectCharacterRequest)) return false;
      if (!object.Equals(PlaceTownRequest, other.PlaceTownRequest)) return false;
      if (!object.Equals(SendChatMessageRequest, other.SendChatMessageRequest)) return false;
      if (!object.Equals(GetChatHistoryRequest, other.GetChatHistoryRequest)) return false;
      if (!object.Equals(GetWorkDistributionRequest, other.GetWorkDistributionRequest)) return false;
      if (!object.Equals(CreateAccountRequest, other.CreateAccountRequest)) return false;
      if (!object.Equals(CreateCharacterRequest, other.CreateCharacterRequest)) return false;
      if (DataCase != other.DataCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataCase_ == DataOneofCase.GetLocalMapRequest) hash ^= GetLocalMapRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.GetWorldMapRequest) hash ^= GetWorldMapRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.LoginRequest) hash ^= LoginRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.SelectCharacterRequest) hash ^= SelectCharacterRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.PlaceTownRequest) hash ^= PlaceTownRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.SendChatMessageRequest) hash ^= SendChatMessageRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.GetChatHistoryRequest) hash ^= GetChatHistoryRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.GetWorkDistributionRequest) hash ^= GetWorkDistributionRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.CreateAccountRequest) hash ^= CreateAccountRequest.GetHashCode();
      if (dataCase_ == DataOneofCase.CreateCharacterRequest) hash ^= CreateCharacterRequest.GetHashCode();
      hash ^= (int) dataCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dataCase_ == DataOneofCase.GetLocalMapRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(GetLocalMapRequest);
      }
      if (dataCase_ == DataOneofCase.GetWorldMapRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(GetWorldMapRequest);
      }
      if (dataCase_ == DataOneofCase.LoginRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(LoginRequest);
      }
      if (dataCase_ == DataOneofCase.SelectCharacterRequest) {
        output.WriteRawTag(34);
        output.WriteMessage(SelectCharacterRequest);
      }
      if (dataCase_ == DataOneofCase.PlaceTownRequest) {
        output.WriteRawTag(42);
        output.WriteMessage(PlaceTownRequest);
      }
      if (dataCase_ == DataOneofCase.SendChatMessageRequest) {
        output.WriteRawTag(50);
        output.WriteMessage(SendChatMessageRequest);
      }
      if (dataCase_ == DataOneofCase.GetChatHistoryRequest) {
        output.WriteRawTag(58);
        output.WriteMessage(GetChatHistoryRequest);
      }
      if (dataCase_ == DataOneofCase.GetWorkDistributionRequest) {
        output.WriteRawTag(66);
        output.WriteMessage(GetWorkDistributionRequest);
      }
      if (dataCase_ == DataOneofCase.CreateAccountRequest) {
        output.WriteRawTag(74);
        output.WriteMessage(CreateAccountRequest);
      }
      if (dataCase_ == DataOneofCase.CreateCharacterRequest) {
        output.WriteRawTag(82);
        output.WriteMessage(CreateCharacterRequest);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataCase_ == DataOneofCase.GetLocalMapRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetLocalMapRequest);
      }
      if (dataCase_ == DataOneofCase.GetWorldMapRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetWorldMapRequest);
      }
      if (dataCase_ == DataOneofCase.LoginRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginRequest);
      }
      if (dataCase_ == DataOneofCase.SelectCharacterRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelectCharacterRequest);
      }
      if (dataCase_ == DataOneofCase.PlaceTownRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaceTownRequest);
      }
      if (dataCase_ == DataOneofCase.SendChatMessageRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendChatMessageRequest);
      }
      if (dataCase_ == DataOneofCase.GetChatHistoryRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetChatHistoryRequest);
      }
      if (dataCase_ == DataOneofCase.GetWorkDistributionRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetWorkDistributionRequest);
      }
      if (dataCase_ == DataOneofCase.CreateAccountRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateAccountRequest);
      }
      if (dataCase_ == DataOneofCase.CreateCharacterRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateCharacterRequest);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      switch (other.DataCase) {
        case DataOneofCase.GetLocalMapRequest:
          GetLocalMapRequest = other.GetLocalMapRequest;
          break;
        case DataOneofCase.GetWorldMapRequest:
          GetWorldMapRequest = other.GetWorldMapRequest;
          break;
        case DataOneofCase.LoginRequest:
          LoginRequest = other.LoginRequest;
          break;
        case DataOneofCase.SelectCharacterRequest:
          SelectCharacterRequest = other.SelectCharacterRequest;
          break;
        case DataOneofCase.PlaceTownRequest:
          PlaceTownRequest = other.PlaceTownRequest;
          break;
        case DataOneofCase.SendChatMessageRequest:
          SendChatMessageRequest = other.SendChatMessageRequest;
          break;
        case DataOneofCase.GetChatHistoryRequest:
          GetChatHistoryRequest = other.GetChatHistoryRequest;
          break;
        case DataOneofCase.GetWorkDistributionRequest:
          GetWorkDistributionRequest = other.GetWorkDistributionRequest;
          break;
        case DataOneofCase.CreateAccountRequest:
          CreateAccountRequest = other.CreateAccountRequest;
          break;
        case DataOneofCase.CreateCharacterRequest:
          CreateCharacterRequest = other.CreateCharacterRequest;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::Gardarike.GetLocalMapRequest subBuilder = new global::Gardarike.GetLocalMapRequest();
            if (dataCase_ == DataOneofCase.GetLocalMapRequest) {
              subBuilder.MergeFrom(GetLocalMapRequest);
            }
            input.ReadMessage(subBuilder);
            GetLocalMapRequest = subBuilder;
            break;
          }
          case 18: {
            global::Gardarike.GetWorldMapRequest subBuilder = new global::Gardarike.GetWorldMapRequest();
            if (dataCase_ == DataOneofCase.GetWorldMapRequest) {
              subBuilder.MergeFrom(GetWorldMapRequest);
            }
            input.ReadMessage(subBuilder);
            GetWorldMapRequest = subBuilder;
            break;
          }
          case 26: {
            global::Gardarike.LoginRequest subBuilder = new global::Gardarike.LoginRequest();
            if (dataCase_ == DataOneofCase.LoginRequest) {
              subBuilder.MergeFrom(LoginRequest);
            }
            input.ReadMessage(subBuilder);
            LoginRequest = subBuilder;
            break;
          }
          case 34: {
            global::Gardarike.SelectCharacterRequest subBuilder = new global::Gardarike.SelectCharacterRequest();
            if (dataCase_ == DataOneofCase.SelectCharacterRequest) {
              subBuilder.MergeFrom(SelectCharacterRequest);
            }
            input.ReadMessage(subBuilder);
            SelectCharacterRequest = subBuilder;
            break;
          }
          case 42: {
            global::Gardarike.PlaceTownRequest subBuilder = new global::Gardarike.PlaceTownRequest();
            if (dataCase_ == DataOneofCase.PlaceTownRequest) {
              subBuilder.MergeFrom(PlaceTownRequest);
            }
            input.ReadMessage(subBuilder);
            PlaceTownRequest = subBuilder;
            break;
          }
          case 50: {
            global::Gardarike.SendChatMessageRequest subBuilder = new global::Gardarike.SendChatMessageRequest();
            if (dataCase_ == DataOneofCase.SendChatMessageRequest) {
              subBuilder.MergeFrom(SendChatMessageRequest);
            }
            input.ReadMessage(subBuilder);
            SendChatMessageRequest = subBuilder;
            break;
          }
          case 58: {
            global::Gardarike.GetChatHistoryRequest subBuilder = new global::Gardarike.GetChatHistoryRequest();
            if (dataCase_ == DataOneofCase.GetChatHistoryRequest) {
              subBuilder.MergeFrom(GetChatHistoryRequest);
            }
            input.ReadMessage(subBuilder);
            GetChatHistoryRequest = subBuilder;
            break;
          }
          case 66: {
            global::Gardarike.GetWorkDistributionRequest subBuilder = new global::Gardarike.GetWorkDistributionRequest();
            if (dataCase_ == DataOneofCase.GetWorkDistributionRequest) {
              subBuilder.MergeFrom(GetWorkDistributionRequest);
            }
            input.ReadMessage(subBuilder);
            GetWorkDistributionRequest = subBuilder;
            break;
          }
          case 74: {
            global::Gardarike.CreateAccountRequest subBuilder = new global::Gardarike.CreateAccountRequest();
            if (dataCase_ == DataOneofCase.CreateAccountRequest) {
              subBuilder.MergeFrom(CreateAccountRequest);
            }
            input.ReadMessage(subBuilder);
            CreateAccountRequest = subBuilder;
            break;
          }
          case 82: {
            global::Gardarike.CreateCharacterRequest subBuilder = new global::Gardarike.CreateCharacterRequest();
            if (dataCase_ == DataOneofCase.CreateCharacterRequest) {
              subBuilder.MergeFrom(CreateCharacterRequest);
            }
            input.ReadMessage(subBuilder);
            CreateCharacterRequest = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateCharacterRequest : pb::IMessage<CreateCharacterRequest> {
    private static readonly pb::MessageParser<CreateCharacterRequest> _parser = new pb::MessageParser<CreateCharacterRequest>(() => new CreateCharacterRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateCharacterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCharacterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCharacterRequest(CreateCharacterRequest other) : this() {
      sessionID_ = other.sessionID_;
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCharacterRequest Clone() {
      return new CreateCharacterRequest(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateCharacterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateCharacterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateCharacterRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateAccountRequest : pb::IMessage<CreateAccountRequest> {
    private static readonly pb::MessageParser<CreateAccountRequest> _parser = new pb::MessageParser<CreateAccountRequest>(() => new CreateAccountRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAccountRequest(CreateAccountRequest other) : this() {
      login_ = other.login_;
      password_ = other.password_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAccountRequest Clone() {
      return new CreateAccountRequest(this);
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 2;
    private string login_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Login {
      get { return login_; }
      set {
        login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Login != other.Login) return false;
      if (Password != other.Password) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Login.Length != 0) hash ^= Login.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Login.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Login);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Login.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Login);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.Login.Length != 0) {
        Login = other.Login;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 18: {
            Login = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlaceTownRequest : pb::IMessage<PlaceTownRequest> {
    private static readonly pb::MessageParser<PlaceTownRequest> _parser = new pb::MessageParser<PlaceTownRequest>(() => new PlaceTownRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlaceTownRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceTownRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceTownRequest(PlaceTownRequest other) : this() {
      sessionID_ = other.sessionID_;
      Location = other.location_ != null ? other.Location.Clone() : null;
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceTownRequest Clone() {
      return new PlaceTownRequest(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Gardarike.Vector2D location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.Vector2D Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlaceTownRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlaceTownRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlaceTownRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          location_ = new global::Gardarike.Vector2D();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              location_ = new global::Gardarike.Vector2D();
            }
            input.ReadMessage(location_);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetWorkDistributionRequest : pb::IMessage<GetWorkDistributionRequest> {
    private static readonly pb::MessageParser<GetWorkDistributionRequest> _parser = new pb::MessageParser<GetWorkDistributionRequest>(() => new GetWorkDistributionRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWorkDistributionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorkDistributionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorkDistributionRequest(GetWorkDistributionRequest other) : this() {
      sessionID_ = other.sessionID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorkDistributionRequest Clone() {
      return new GetWorkDistributionRequest(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWorkDistributionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWorkDistributionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWorkDistributionRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Get 'count' chat messages starting from some message 'lastMessageID'
  ///  Messages are sorted from newest to oldest
  /// </summary>
  public sealed partial class GetChatHistoryRequest : pb::IMessage<GetChatHistoryRequest> {
    private static readonly pb::MessageParser<GetChatHistoryRequest> _parser = new pb::MessageParser<GetChatHistoryRequest>(() => new GetChatHistoryRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetChatHistoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChatHistoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChatHistoryRequest(GetChatHistoryRequest other) : this() {
      sessionID_ = other.sessionID_;
      offset_ = other.offset_;
      count_ = other.count_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChatHistoryRequest Clone() {
      return new GetChatHistoryRequest(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private ulong offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 3;
    private ulong count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetChatHistoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetChatHistoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      if (Offset != other.Offset) return false;
      if (Count != other.Count) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      if (Offset != 0UL) hash ^= Offset.GetHashCode();
      if (Count != 0UL) hash ^= Count.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
      if (Offset != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Offset);
      }
      if (Count != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Count);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      if (Offset != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Offset);
      }
      if (Count != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Count);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetChatHistoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
      if (other.Offset != 0UL) {
        Offset = other.Offset;
      }
      if (other.Count != 0UL) {
        Count = other.Count;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
          case 16: {
            Offset = input.ReadUInt64();
            break;
          }
          case 24: {
            Count = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendChatMessageRequest : pb::IMessage<SendChatMessageRequest> {
    private static readonly pb::MessageParser<SendChatMessageRequest> _parser = new pb::MessageParser<SendChatMessageRequest>(() => new SendChatMessageRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendChatMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatMessageRequest(SendChatMessageRequest other) : this() {
      sessionID_ = other.sessionID_;
      text_ = other.text_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatMessageRequest Clone() {
      return new SendChatMessageRequest(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendChatMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendChatMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      if (Text != other.Text) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendChatMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetWorldMapRequest : pb::IMessage<GetWorldMapRequest> {
    private static readonly pb::MessageParser<GetWorldMapRequest> _parser = new pb::MessageParser<GetWorldMapRequest>(() => new GetWorldMapRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWorldMapRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorldMapRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorldMapRequest(GetWorldMapRequest other) : this() {
      sessionID_ = other.sessionID_;
      Location = other.location_ != null ? other.Location.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorldMapRequest Clone() {
      return new GetWorldMapRequest(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Gardarike.Vector3D location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.Vector3D Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWorldMapRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWorldMapRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      if (!object.Equals(Location, other.Location)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWorldMapRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          location_ = new global::Gardarike.Vector3D();
        }
        Location.MergeFrom(other.Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              location_ = new global::Gardarike.Vector3D();
            }
            input.ReadMessage(location_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetLocalMapRequest : pb::IMessage<GetLocalMapRequest> {
    private static readonly pb::MessageParser<GetLocalMapRequest> _parser = new pb::MessageParser<GetLocalMapRequest>(() => new GetLocalMapRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLocalMapRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocalMapRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocalMapRequest(GetLocalMapRequest other) : this() {
      sessionID_ = other.sessionID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocalMapRequest Clone() {
      return new GetLocalMapRequest(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLocalMapRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLocalMapRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLocalMapRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      username_ = other.username_;
      password_ = other.password_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SelectCharacterRequest : pb::IMessage<SelectCharacterRequest> {
    private static readonly pb::MessageParser<SelectCharacterRequest> _parser = new pb::MessageParser<SelectCharacterRequest>(() => new SelectCharacterRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelectCharacterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectCharacterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectCharacterRequest(SelectCharacterRequest other) : this() {
      sessionID_ = other.sessionID_;
      characterID_ = other.characterID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectCharacterRequest Clone() {
      return new SelectCharacterRequest(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "characterID" field.</summary>
    public const int CharacterIDFieldNumber = 2;
    private long characterID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CharacterID {
      get { return characterID_; }
      set {
        characterID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelectCharacterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelectCharacterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      if (CharacterID != other.CharacterID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      if (CharacterID != 0L) hash ^= CharacterID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
      if (CharacterID != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CharacterID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      if (CharacterID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CharacterID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelectCharacterRequest other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
      if (other.CharacterID != 0L) {
        CharacterID = other.CharacterID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
          case 16: {
            CharacterID = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Responses
  /// </summary>
  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      switch (other.DataCase) {
        case DataOneofCase.ErrorResponse:
          ErrorResponse = other.ErrorResponse.Clone();
          break;
        case DataOneofCase.GetLocalMapResponse:
          GetLocalMapResponse = other.GetLocalMapResponse.Clone();
          break;
        case DataOneofCase.GetWorldMapResponse:
          GetWorldMapResponse = other.GetWorldMapResponse.Clone();
          break;
        case DataOneofCase.LoginResponse:
          LoginResponse = other.LoginResponse.Clone();
          break;
        case DataOneofCase.MultipartResponse:
          MultipartResponse = other.MultipartResponse.Clone();
          break;
        case DataOneofCase.SelectCharacterResponse:
          SelectCharacterResponse = other.SelectCharacterResponse.Clone();
          break;
        case DataOneofCase.PlaceTownResponse:
          PlaceTownResponse = other.PlaceTownResponse.Clone();
          break;
        case DataOneofCase.SendChatMessageResponse:
          SendChatMessageResponse = other.SendChatMessageResponse.Clone();
          break;
        case DataOneofCase.GetChatHistoryResponse:
          GetChatHistoryResponse = other.GetChatHistoryResponse.Clone();
          break;
        case DataOneofCase.ChatMessagePublishResponse:
          ChatMessagePublishResponse = other.ChatMessagePublishResponse.Clone();
          break;
        case DataOneofCase.GetWorkDistributionResponse:
          GetWorkDistributionResponse = other.GetWorkDistributionResponse.Clone();
          break;
        case DataOneofCase.CreateAccountResponse:
          CreateAccountResponse = other.CreateAccountResponse.Clone();
          break;
        case DataOneofCase.CreateCharacterResponse:
          CreateCharacterResponse = other.CreateCharacterResponse.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "errorResponse" field.</summary>
    public const int ErrorResponseFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.ErrorResponse ErrorResponse {
      get { return dataCase_ == DataOneofCase.ErrorResponse ? (global::Gardarike.ErrorResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.ErrorResponse;
      }
    }

    /// <summary>Field number for the "getLocalMapResponse" field.</summary>
    public const int GetLocalMapResponseFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.GetLocalMapResponse GetLocalMapResponse {
      get { return dataCase_ == DataOneofCase.GetLocalMapResponse ? (global::Gardarike.GetLocalMapResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GetLocalMapResponse;
      }
    }

    /// <summary>Field number for the "getWorldMapResponse" field.</summary>
    public const int GetWorldMapResponseFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.GetWorldMapResponse GetWorldMapResponse {
      get { return dataCase_ == DataOneofCase.GetWorldMapResponse ? (global::Gardarike.GetWorldMapResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GetWorldMapResponse;
      }
    }

    /// <summary>Field number for the "loginResponse" field.</summary>
    public const int LoginResponseFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.LoginResponse LoginResponse {
      get { return dataCase_ == DataOneofCase.LoginResponse ? (global::Gardarike.LoginResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.LoginResponse;
      }
    }

    /// <summary>Field number for the "multipartResponse" field.</summary>
    public const int MultipartResponseFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.MultipartResponse MultipartResponse {
      get { return dataCase_ == DataOneofCase.MultipartResponse ? (global::Gardarike.MultipartResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.MultipartResponse;
      }
    }

    /// <summary>Field number for the "SelectCharacterResponse" field.</summary>
    public const int SelectCharacterResponseFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.SelectCharacterResponse SelectCharacterResponse {
      get { return dataCase_ == DataOneofCase.SelectCharacterResponse ? (global::Gardarike.SelectCharacterResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.SelectCharacterResponse;
      }
    }

    /// <summary>Field number for the "placeTownResponse" field.</summary>
    public const int PlaceTownResponseFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.PlaceTownResponse PlaceTownResponse {
      get { return dataCase_ == DataOneofCase.PlaceTownResponse ? (global::Gardarike.PlaceTownResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.PlaceTownResponse;
      }
    }

    /// <summary>Field number for the "sendChatMessageResponse" field.</summary>
    public const int SendChatMessageResponseFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.SendChatMessageResponse SendChatMessageResponse {
      get { return dataCase_ == DataOneofCase.SendChatMessageResponse ? (global::Gardarike.SendChatMessageResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.SendChatMessageResponse;
      }
    }

    /// <summary>Field number for the "getChatHistoryResponse" field.</summary>
    public const int GetChatHistoryResponseFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.GetChatHistoryResponse GetChatHistoryResponse {
      get { return dataCase_ == DataOneofCase.GetChatHistoryResponse ? (global::Gardarike.GetChatHistoryResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GetChatHistoryResponse;
      }
    }

    /// <summary>Field number for the "chatMessagePublishResponse" field.</summary>
    public const int ChatMessagePublishResponseFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.ChatMessagePublishResponse ChatMessagePublishResponse {
      get { return dataCase_ == DataOneofCase.ChatMessagePublishResponse ? (global::Gardarike.ChatMessagePublishResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.ChatMessagePublishResponse;
      }
    }

    /// <summary>Field number for the "getWorkDistributionResponse" field.</summary>
    public const int GetWorkDistributionResponseFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.GetWorkDistributionResponse GetWorkDistributionResponse {
      get { return dataCase_ == DataOneofCase.GetWorkDistributionResponse ? (global::Gardarike.GetWorkDistributionResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.GetWorkDistributionResponse;
      }
    }

    /// <summary>Field number for the "createAccountResponse" field.</summary>
    public const int CreateAccountResponseFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.CreateAccountResponse CreateAccountResponse {
      get { return dataCase_ == DataOneofCase.CreateAccountResponse ? (global::Gardarike.CreateAccountResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.CreateAccountResponse;
      }
    }

    /// <summary>Field number for the "createCharacterResponse" field.</summary>
    public const int CreateCharacterResponseFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.CreateCharacterResponse CreateCharacterResponse {
      get { return dataCase_ == DataOneofCase.CreateCharacterResponse ? (global::Gardarike.CreateCharacterResponse) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.CreateCharacterResponse;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      ErrorResponse = 1,
      GetLocalMapResponse = 2,
      GetWorldMapResponse = 3,
      LoginResponse = 4,
      MultipartResponse = 5,
      SelectCharacterResponse = 6,
      PlaceTownResponse = 7,
      SendChatMessageResponse = 8,
      GetChatHistoryResponse = 9,
      ChatMessagePublishResponse = 10,
      GetWorkDistributionResponse = 11,
      CreateAccountResponse = 12,
      CreateCharacterResponse = 13,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ErrorResponse, other.ErrorResponse)) return false;
      if (!object.Equals(GetLocalMapResponse, other.GetLocalMapResponse)) return false;
      if (!object.Equals(GetWorldMapResponse, other.GetWorldMapResponse)) return false;
      if (!object.Equals(LoginResponse, other.LoginResponse)) return false;
      if (!object.Equals(MultipartResponse, other.MultipartResponse)) return false;
      if (!object.Equals(SelectCharacterResponse, other.SelectCharacterResponse)) return false;
      if (!object.Equals(PlaceTownResponse, other.PlaceTownResponse)) return false;
      if (!object.Equals(SendChatMessageResponse, other.SendChatMessageResponse)) return false;
      if (!object.Equals(GetChatHistoryResponse, other.GetChatHistoryResponse)) return false;
      if (!object.Equals(ChatMessagePublishResponse, other.ChatMessagePublishResponse)) return false;
      if (!object.Equals(GetWorkDistributionResponse, other.GetWorkDistributionResponse)) return false;
      if (!object.Equals(CreateAccountResponse, other.CreateAccountResponse)) return false;
      if (!object.Equals(CreateCharacterResponse, other.CreateCharacterResponse)) return false;
      if (DataCase != other.DataCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataCase_ == DataOneofCase.ErrorResponse) hash ^= ErrorResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.GetLocalMapResponse) hash ^= GetLocalMapResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.GetWorldMapResponse) hash ^= GetWorldMapResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.LoginResponse) hash ^= LoginResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.MultipartResponse) hash ^= MultipartResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.SelectCharacterResponse) hash ^= SelectCharacterResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.PlaceTownResponse) hash ^= PlaceTownResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.SendChatMessageResponse) hash ^= SendChatMessageResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.GetChatHistoryResponse) hash ^= GetChatHistoryResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.ChatMessagePublishResponse) hash ^= ChatMessagePublishResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.GetWorkDistributionResponse) hash ^= GetWorkDistributionResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.CreateAccountResponse) hash ^= CreateAccountResponse.GetHashCode();
      if (dataCase_ == DataOneofCase.CreateCharacterResponse) hash ^= CreateCharacterResponse.GetHashCode();
      hash ^= (int) dataCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dataCase_ == DataOneofCase.ErrorResponse) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrorResponse);
      }
      if (dataCase_ == DataOneofCase.GetLocalMapResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(GetLocalMapResponse);
      }
      if (dataCase_ == DataOneofCase.GetWorldMapResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(GetWorldMapResponse);
      }
      if (dataCase_ == DataOneofCase.LoginResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(LoginResponse);
      }
      if (dataCase_ == DataOneofCase.MultipartResponse) {
        output.WriteRawTag(42);
        output.WriteMessage(MultipartResponse);
      }
      if (dataCase_ == DataOneofCase.SelectCharacterResponse) {
        output.WriteRawTag(50);
        output.WriteMessage(SelectCharacterResponse);
      }
      if (dataCase_ == DataOneofCase.PlaceTownResponse) {
        output.WriteRawTag(58);
        output.WriteMessage(PlaceTownResponse);
      }
      if (dataCase_ == DataOneofCase.SendChatMessageResponse) {
        output.WriteRawTag(66);
        output.WriteMessage(SendChatMessageResponse);
      }
      if (dataCase_ == DataOneofCase.GetChatHistoryResponse) {
        output.WriteRawTag(74);
        output.WriteMessage(GetChatHistoryResponse);
      }
      if (dataCase_ == DataOneofCase.ChatMessagePublishResponse) {
        output.WriteRawTag(82);
        output.WriteMessage(ChatMessagePublishResponse);
      }
      if (dataCase_ == DataOneofCase.GetWorkDistributionResponse) {
        output.WriteRawTag(90);
        output.WriteMessage(GetWorkDistributionResponse);
      }
      if (dataCase_ == DataOneofCase.CreateAccountResponse) {
        output.WriteRawTag(98);
        output.WriteMessage(CreateAccountResponse);
      }
      if (dataCase_ == DataOneofCase.CreateCharacterResponse) {
        output.WriteRawTag(106);
        output.WriteMessage(CreateCharacterResponse);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataCase_ == DataOneofCase.ErrorResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorResponse);
      }
      if (dataCase_ == DataOneofCase.GetLocalMapResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetLocalMapResponse);
      }
      if (dataCase_ == DataOneofCase.GetWorldMapResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetWorldMapResponse);
      }
      if (dataCase_ == DataOneofCase.LoginResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoginResponse);
      }
      if (dataCase_ == DataOneofCase.MultipartResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MultipartResponse);
      }
      if (dataCase_ == DataOneofCase.SelectCharacterResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelectCharacterResponse);
      }
      if (dataCase_ == DataOneofCase.PlaceTownResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaceTownResponse);
      }
      if (dataCase_ == DataOneofCase.SendChatMessageResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendChatMessageResponse);
      }
      if (dataCase_ == DataOneofCase.GetChatHistoryResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetChatHistoryResponse);
      }
      if (dataCase_ == DataOneofCase.ChatMessagePublishResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatMessagePublishResponse);
      }
      if (dataCase_ == DataOneofCase.GetWorkDistributionResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetWorkDistributionResponse);
      }
      if (dataCase_ == DataOneofCase.CreateAccountResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateAccountResponse);
      }
      if (dataCase_ == DataOneofCase.CreateCharacterResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateCharacterResponse);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      switch (other.DataCase) {
        case DataOneofCase.ErrorResponse:
          ErrorResponse = other.ErrorResponse;
          break;
        case DataOneofCase.GetLocalMapResponse:
          GetLocalMapResponse = other.GetLocalMapResponse;
          break;
        case DataOneofCase.GetWorldMapResponse:
          GetWorldMapResponse = other.GetWorldMapResponse;
          break;
        case DataOneofCase.LoginResponse:
          LoginResponse = other.LoginResponse;
          break;
        case DataOneofCase.MultipartResponse:
          MultipartResponse = other.MultipartResponse;
          break;
        case DataOneofCase.SelectCharacterResponse:
          SelectCharacterResponse = other.SelectCharacterResponse;
          break;
        case DataOneofCase.PlaceTownResponse:
          PlaceTownResponse = other.PlaceTownResponse;
          break;
        case DataOneofCase.SendChatMessageResponse:
          SendChatMessageResponse = other.SendChatMessageResponse;
          break;
        case DataOneofCase.GetChatHistoryResponse:
          GetChatHistoryResponse = other.GetChatHistoryResponse;
          break;
        case DataOneofCase.ChatMessagePublishResponse:
          ChatMessagePublishResponse = other.ChatMessagePublishResponse;
          break;
        case DataOneofCase.GetWorkDistributionResponse:
          GetWorkDistributionResponse = other.GetWorkDistributionResponse;
          break;
        case DataOneofCase.CreateAccountResponse:
          CreateAccountResponse = other.CreateAccountResponse;
          break;
        case DataOneofCase.CreateCharacterResponse:
          CreateCharacterResponse = other.CreateCharacterResponse;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::Gardarike.ErrorResponse subBuilder = new global::Gardarike.ErrorResponse();
            if (dataCase_ == DataOneofCase.ErrorResponse) {
              subBuilder.MergeFrom(ErrorResponse);
            }
            input.ReadMessage(subBuilder);
            ErrorResponse = subBuilder;
            break;
          }
          case 18: {
            global::Gardarike.GetLocalMapResponse subBuilder = new global::Gardarike.GetLocalMapResponse();
            if (dataCase_ == DataOneofCase.GetLocalMapResponse) {
              subBuilder.MergeFrom(GetLocalMapResponse);
            }
            input.ReadMessage(subBuilder);
            GetLocalMapResponse = subBuilder;
            break;
          }
          case 26: {
            global::Gardarike.GetWorldMapResponse subBuilder = new global::Gardarike.GetWorldMapResponse();
            if (dataCase_ == DataOneofCase.GetWorldMapResponse) {
              subBuilder.MergeFrom(GetWorldMapResponse);
            }
            input.ReadMessage(subBuilder);
            GetWorldMapResponse = subBuilder;
            break;
          }
          case 34: {
            global::Gardarike.LoginResponse subBuilder = new global::Gardarike.LoginResponse();
            if (dataCase_ == DataOneofCase.LoginResponse) {
              subBuilder.MergeFrom(LoginResponse);
            }
            input.ReadMessage(subBuilder);
            LoginResponse = subBuilder;
            break;
          }
          case 42: {
            global::Gardarike.MultipartResponse subBuilder = new global::Gardarike.MultipartResponse();
            if (dataCase_ == DataOneofCase.MultipartResponse) {
              subBuilder.MergeFrom(MultipartResponse);
            }
            input.ReadMessage(subBuilder);
            MultipartResponse = subBuilder;
            break;
          }
          case 50: {
            global::Gardarike.SelectCharacterResponse subBuilder = new global::Gardarike.SelectCharacterResponse();
            if (dataCase_ == DataOneofCase.SelectCharacterResponse) {
              subBuilder.MergeFrom(SelectCharacterResponse);
            }
            input.ReadMessage(subBuilder);
            SelectCharacterResponse = subBuilder;
            break;
          }
          case 58: {
            global::Gardarike.PlaceTownResponse subBuilder = new global::Gardarike.PlaceTownResponse();
            if (dataCase_ == DataOneofCase.PlaceTownResponse) {
              subBuilder.MergeFrom(PlaceTownResponse);
            }
            input.ReadMessage(subBuilder);
            PlaceTownResponse = subBuilder;
            break;
          }
          case 66: {
            global::Gardarike.SendChatMessageResponse subBuilder = new global::Gardarike.SendChatMessageResponse();
            if (dataCase_ == DataOneofCase.SendChatMessageResponse) {
              subBuilder.MergeFrom(SendChatMessageResponse);
            }
            input.ReadMessage(subBuilder);
            SendChatMessageResponse = subBuilder;
            break;
          }
          case 74: {
            global::Gardarike.GetChatHistoryResponse subBuilder = new global::Gardarike.GetChatHistoryResponse();
            if (dataCase_ == DataOneofCase.GetChatHistoryResponse) {
              subBuilder.MergeFrom(GetChatHistoryResponse);
            }
            input.ReadMessage(subBuilder);
            GetChatHistoryResponse = subBuilder;
            break;
          }
          case 82: {
            global::Gardarike.ChatMessagePublishResponse subBuilder = new global::Gardarike.ChatMessagePublishResponse();
            if (dataCase_ == DataOneofCase.ChatMessagePublishResponse) {
              subBuilder.MergeFrom(ChatMessagePublishResponse);
            }
            input.ReadMessage(subBuilder);
            ChatMessagePublishResponse = subBuilder;
            break;
          }
          case 90: {
            global::Gardarike.GetWorkDistributionResponse subBuilder = new global::Gardarike.GetWorkDistributionResponse();
            if (dataCase_ == DataOneofCase.GetWorkDistributionResponse) {
              subBuilder.MergeFrom(GetWorkDistributionResponse);
            }
            input.ReadMessage(subBuilder);
            GetWorkDistributionResponse = subBuilder;
            break;
          }
          case 98: {
            global::Gardarike.CreateAccountResponse subBuilder = new global::Gardarike.CreateAccountResponse();
            if (dataCase_ == DataOneofCase.CreateAccountResponse) {
              subBuilder.MergeFrom(CreateAccountResponse);
            }
            input.ReadMessage(subBuilder);
            CreateAccountResponse = subBuilder;
            break;
          }
          case 106: {
            global::Gardarike.CreateCharacterResponse subBuilder = new global::Gardarike.CreateCharacterResponse();
            if (dataCase_ == DataOneofCase.CreateCharacterResponse) {
              subBuilder.MergeFrom(CreateCharacterResponse);
            }
            input.ReadMessage(subBuilder);
            CreateCharacterResponse = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateCharacterResponse : pb::IMessage<CreateCharacterResponse> {
    private static readonly pb::MessageParser<CreateCharacterResponse> _parser = new pb::MessageParser<CreateCharacterResponse>(() => new CreateCharacterResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateCharacterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCharacterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCharacterResponse(CreateCharacterResponse other) : this() {
      id_ = other.id_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateCharacterResponse Clone() {
      return new CreateCharacterResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateCharacterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateCharacterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateCharacterResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateAccountResponse : pb::IMessage<CreateAccountResponse> {
    private static readonly pb::MessageParser<CreateAccountResponse> _parser = new pb::MessageParser<CreateAccountResponse>(() => new CreateAccountResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAccountResponse(CreateAccountResponse other) : this() {
      id_ = other.id_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAccountResponse Clone() {
      return new CreateAccountResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetWorkDistributionResponse : pb::IMessage<GetWorkDistributionResponse> {
    private static readonly pb::MessageParser<GetWorkDistributionResponse> _parser = new pb::MessageParser<GetWorkDistributionResponse>(() => new GetWorkDistributionResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWorkDistributionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorkDistributionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorkDistributionResponse(GetWorkDistributionResponse other) : this() {
      idleCount_ = other.idleCount_;
      woodcutterCount_ = other.woodcutterCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorkDistributionResponse Clone() {
      return new GetWorkDistributionResponse(this);
    }

    /// <summary>Field number for the "idleCount" field.</summary>
    public const int IdleCountFieldNumber = 1;
    private ulong idleCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong IdleCount {
      get { return idleCount_; }
      set {
        idleCount_ = value;
      }
    }

    /// <summary>Field number for the "woodcutterCount" field.</summary>
    public const int WoodcutterCountFieldNumber = 2;
    private ulong woodcutterCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong WoodcutterCount {
      get { return woodcutterCount_; }
      set {
        woodcutterCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWorkDistributionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWorkDistributionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdleCount != other.IdleCount) return false;
      if (WoodcutterCount != other.WoodcutterCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdleCount != 0UL) hash ^= IdleCount.GetHashCode();
      if (WoodcutterCount != 0UL) hash ^= WoodcutterCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdleCount != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(IdleCount);
      }
      if (WoodcutterCount != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(WoodcutterCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdleCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(IdleCount);
      }
      if (WoodcutterCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WoodcutterCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWorkDistributionResponse other) {
      if (other == null) {
        return;
      }
      if (other.IdleCount != 0UL) {
        IdleCount = other.IdleCount;
      }
      if (other.WoodcutterCount != 0UL) {
        WoodcutterCount = other.WoodcutterCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            IdleCount = input.ReadUInt64();
            break;
          }
          case 16: {
            WoodcutterCount = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatMessagePublishResponse : pb::IMessage<ChatMessagePublishResponse> {
    private static readonly pb::MessageParser<ChatMessagePublishResponse> _parser = new pb::MessageParser<ChatMessagePublishResponse>(() => new ChatMessagePublishResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatMessagePublishResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessagePublishResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessagePublishResponse(ChatMessagePublishResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessagePublishResponse Clone() {
      return new ChatMessagePublishResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatMessagePublishResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatMessagePublishResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatMessagePublishResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class GetChatHistoryResponse : pb::IMessage<GetChatHistoryResponse> {
    private static readonly pb::MessageParser<GetChatHistoryResponse> _parser = new pb::MessageParser<GetChatHistoryResponse>(() => new GetChatHistoryResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetChatHistoryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChatHistoryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChatHistoryResponse(GetChatHistoryResponse other) : this() {
      messages_ = other.messages_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetChatHistoryResponse Clone() {
      return new GetChatHistoryResponse(this);
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int MessagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Gardarike.ChatMessage> _repeated_messages_codec
        = pb::FieldCodec.ForMessage(10, global::Gardarike.ChatMessage.Parser);
    private readonly pbc::RepeatedField<global::Gardarike.ChatMessage> messages_ = new pbc::RepeatedField<global::Gardarike.ChatMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gardarike.ChatMessage> Messages {
      get { return messages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetChatHistoryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetChatHistoryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!messages_.Equals(other.messages_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= messages_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      messages_.WriteTo(output, _repeated_messages_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += messages_.CalculateSize(_repeated_messages_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetChatHistoryResponse other) {
      if (other == null) {
        return;
      }
      messages_.Add(other.messages_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SendChatMessageResponse : pb::IMessage<SendChatMessageResponse> {
    private static readonly pb::MessageParser<SendChatMessageResponse> _parser = new pb::MessageParser<SendChatMessageResponse>(() => new SendChatMessageResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendChatMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatMessageResponse(SendChatMessageResponse other) : this() {
      messageID_ = other.messageID_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendChatMessageResponse Clone() {
      return new SendChatMessageResponse(this);
    }

    /// <summary>Field number for the "messageID" field.</summary>
    public const int MessageIDFieldNumber = 1;
    private long messageID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MessageID {
      get { return messageID_; }
      set {
        messageID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendChatMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendChatMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageID != other.MessageID) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageID != 0L) hash ^= MessageID.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MessageID != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MessageID);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MessageID != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MessageID);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendChatMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.MessageID != 0L) {
        MessageID = other.MessageID;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            MessageID = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlaceTownResponse : pb::IMessage<PlaceTownResponse> {
    private static readonly pb::MessageParser<PlaceTownResponse> _parser = new pb::MessageParser<PlaceTownResponse>(() => new PlaceTownResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlaceTownResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceTownResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceTownResponse(PlaceTownResponse other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaceTownResponse Clone() {
      return new PlaceTownResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlaceTownResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlaceTownResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlaceTownResponse other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  /// <summary>
  ///  Response indicating start of the multipart response
  ///  Parts field indicating how many subsequent datagram packets
  ///  should be considered as a single response.
  /// </summary>
  public sealed partial class MultipartResponse : pb::IMessage<MultipartResponse> {
    private static readonly pb::MessageParser<MultipartResponse> _parser = new pb::MessageParser<MultipartResponse>(() => new MultipartResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultipartResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultipartResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultipartResponse(MultipartResponse other) : this() {
      parts_ = other.parts_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultipartResponse Clone() {
      return new MultipartResponse(this);
    }

    /// <summary>Field number for the "parts" field.</summary>
    public const int PartsFieldNumber = 1;
    private long parts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Parts {
      get { return parts_; }
      set {
        parts_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultipartResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultipartResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parts != other.Parts) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parts != 0L) hash ^= Parts.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parts != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Parts);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parts != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Parts);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultipartResponse other) {
      if (other == null) {
        return;
      }
      if (other.Parts != 0L) {
        Parts = other.Parts;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Parts = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginResponse : pb::IMessage<LoginResponse> {
    private static readonly pb::MessageParser<LoginResponse> _parser = new pb::MessageParser<LoginResponse>(() => new LoginResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse(LoginResponse other) : this() {
      sessionID_ = other.sessionID_;
      characters_ = other.characters_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse Clone() {
      return new LoginResponse(this);
    }

    /// <summary>Field number for the "sessionID" field.</summary>
    public const int SessionIDFieldNumber = 1;
    private string sessionID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionID {
      get { return sessionID_; }
      set {
        sessionID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "characters" field.</summary>
    public const int CharactersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Gardarike.Character> _repeated_characters_codec
        = pb::FieldCodec.ForMessage(18, global::Gardarike.Character.Parser);
    private readonly pbc::RepeatedField<global::Gardarike.Character> characters_ = new pbc::RepeatedField<global::Gardarike.Character>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gardarike.Character> Characters {
      get { return characters_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionID != other.SessionID) return false;
      if(!characters_.Equals(other.characters_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionID.Length != 0) hash ^= SessionID.GetHashCode();
      hash ^= characters_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionID);
      }
      characters_.WriteTo(output, _repeated_characters_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionID);
      }
      size += characters_.CalculateSize(_repeated_characters_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResponse other) {
      if (other == null) {
        return;
      }
      if (other.SessionID.Length != 0) {
        SessionID = other.SessionID;
      }
      characters_.Add(other.characters_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SessionID = input.ReadString();
            break;
          }
          case 18: {
            characters_.AddEntriesFrom(input, _repeated_characters_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ErrorResponse : pb::IMessage<ErrorResponse> {
    private static readonly pb::MessageParser<ErrorResponse> _parser = new pb::MessageParser<ErrorResponse>(() => new ErrorResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse(ErrorResponse other) : this() {
      message_ = other.message_;
      code_ = other.code_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse Clone() {
      return new ErrorResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private global::Gardarike.Error code_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.Error Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ErrorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ErrorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      if (Code != other.Code) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Code);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ErrorResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
          case 16: {
            code_ = (global::Gardarike.Error) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SelectCharacterResponse : pb::IMessage<SelectCharacterResponse> {
    private static readonly pb::MessageParser<SelectCharacterResponse> _parser = new pb::MessageParser<SelectCharacterResponse>(() => new SelectCharacterResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SelectCharacterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectCharacterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectCharacterResponse(SelectCharacterResponse other) : this() {
      towns_ = other.towns_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SelectCharacterResponse Clone() {
      return new SelectCharacterResponse(this);
    }

    /// <summary>Field number for the "towns" field.</summary>
    public const int TownsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Gardarike.Town> _repeated_towns_codec
        = pb::FieldCodec.ForMessage(10, global::Gardarike.Town.Parser);
    private readonly pbc::RepeatedField<global::Gardarike.Town> towns_ = new pbc::RepeatedField<global::Gardarike.Town>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gardarike.Town> Towns {
      get { return towns_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SelectCharacterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SelectCharacterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!towns_.Equals(other.towns_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= towns_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      towns_.WriteTo(output, _repeated_towns_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += towns_.CalculateSize(_repeated_towns_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SelectCharacterResponse other) {
      if (other == null) {
        return;
      }
      towns_.Add(other.towns_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            towns_.AddEntriesFrom(input, _repeated_towns_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatMessage : pb::IMessage<ChatMessage> {
    private static readonly pb::MessageParser<ChatMessage> _parser = new pb::MessageParser<ChatMessage>(() => new ChatMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage(ChatMessage other) : this() {
      id_ = other.id_;
      sender_ = other.sender_;
      text_ = other.text_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage Clone() {
      return new ChatMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "sender" field.</summary>
    public const int SenderFieldNumber = 2;
    private string sender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sender {
      get { return sender_; }
      set {
        sender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 3;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Sender != other.Sender) return false;
      if (Text != other.Text) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Sender.Length != 0) hash ^= Sender.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Sender.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Sender);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Text);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Sender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sender);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Sender.Length != 0) {
        Sender = other.Sender;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Sender = input.ReadString();
            break;
          }
          case 26: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event : pb::IMessage<Event> {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event(Event other) : this() {
      switch (other.PayloadCase) {
        case PayloadOneofCase.ChatMessageEvent:
          ChatMessageEvent = other.ChatMessageEvent.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "chatMessageEvent" field.</summary>
    public const int ChatMessageEventFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.NewChatMessageEvent ChatMessageEvent {
      get { return payloadCase_ == PayloadOneofCase.ChatMessageEvent ? (global::Gardarike.NewChatMessageEvent) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ChatMessageEvent;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      ChatMessageEvent = 1,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChatMessageEvent, other.ChatMessageEvent)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.ChatMessageEvent) hash ^= ChatMessageEvent.GetHashCode();
      hash ^= (int) payloadCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payloadCase_ == PayloadOneofCase.ChatMessageEvent) {
        output.WriteRawTag(10);
        output.WriteMessage(ChatMessageEvent);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.ChatMessageEvent) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatMessageEvent);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.ChatMessageEvent:
          ChatMessageEvent = other.ChatMessageEvent;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::Gardarike.NewChatMessageEvent subBuilder = new global::Gardarike.NewChatMessageEvent();
            if (payloadCase_ == PayloadOneofCase.ChatMessageEvent) {
              subBuilder.MergeFrom(ChatMessageEvent);
            }
            input.ReadMessage(subBuilder);
            ChatMessageEvent = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewChatMessageEvent : pb::IMessage<NewChatMessageEvent> {
    private static readonly pb::MessageParser<NewChatMessageEvent> _parser = new pb::MessageParser<NewChatMessageEvent>(() => new NewChatMessageEvent());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewChatMessageEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewChatMessageEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewChatMessageEvent(NewChatMessageEvent other) : this() {
      Message = other.message_ != null ? other.Message.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewChatMessageEvent Clone() {
      return new NewChatMessageEvent(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private global::Gardarike.ChatMessage message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.ChatMessage Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewChatMessageEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewChatMessageEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Message, other.Message)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (message_ != null) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (message_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewChatMessageEvent other) {
      if (other == null) {
        return;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          message_ = new global::Gardarike.ChatMessage();
        }
        Message.MergeFrom(other.Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (message_ == null) {
              message_ = new global::Gardarike.ChatMessage();
            }
            input.ReadMessage(message_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Vector3D : pb::IMessage<Vector3D> {
    private static readonly pb::MessageParser<Vector3D> _parser = new pb::MessageParser<Vector3D>(() => new Vector3D());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector3D> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3D() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3D(Vector3D other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3D Clone() {
      return new Vector3D(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector3D);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector3D other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Z != other.Z) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= X.GetHashCode();
      if (Y != 0F) hash ^= Y.GetHashCode();
      if (Z != 0F) hash ^= Z.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector3D other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Vector2D : pb::IMessage<Vector2D> {
    private static readonly pb::MessageParser<Vector2D> _parser = new pb::MessageParser<Vector2D>(() => new Vector2D());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector2D> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2D() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2D(Vector2D other) : this() {
      x_ = other.x_;
      y_ = other.y_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector2D Clone() {
      return new Vector2D(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private long x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private long y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector2D);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector2D other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0L) hash ^= X.GetHashCode();
      if (Y != 0L) hash ^= Y.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(X);
      }
      if (Y != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Y);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(X);
      }
      if (Y != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Y);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector2D other) {
      if (other == null) {
        return;
      }
      if (other.X != 0L) {
        X = other.X;
      }
      if (other.Y != 0L) {
        Y = other.Y;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            X = input.ReadInt64();
            break;
          }
          case 16: {
            Y = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Local map is a map of a concrete village
  /// </summary>
  public sealed partial class LocalMap : pb::IMessage<LocalMap> {
    private static readonly pb::MessageParser<LocalMap> _parser = new pb::MessageParser<LocalMap>(() => new LocalMap());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocalMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocalMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocalMap(LocalMap other) : this() {
      buildings_ = other.buildings_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocalMap Clone() {
      return new LocalMap(this);
    }

    /// <summary>Field number for the "buildings" field.</summary>
    public const int BuildingsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Gardarike.Building> _repeated_buildings_codec
        = pb::FieldCodec.ForMessage(34, global::Gardarike.Building.Parser);
    private readonly pbc::RepeatedField<global::Gardarike.Building> buildings_ = new pbc::RepeatedField<global::Gardarike.Building>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gardarike.Building> Buildings {
      get { return buildings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocalMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocalMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!buildings_.Equals(other.buildings_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= buildings_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      buildings_.WriteTo(output, _repeated_buildings_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += buildings_.CalculateSize(_repeated_buildings_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocalMap other) {
      if (other == null) {
        return;
      }
      buildings_.Add(other.buildings_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 34: {
            buildings_.AddEntriesFrom(input, _repeated_buildings_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class WorldMapChunk : pb::IMessage<WorldMapChunk> {
    private static readonly pb::MessageParser<WorldMapChunk> _parser = new pb::MessageParser<WorldMapChunk>(() => new WorldMapChunk());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WorldMapChunk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldMapChunk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldMapChunk(WorldMapChunk other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      width_ = other.width_;
      height_ = other.height_;
      data_ = other.data_.Clone();
      towns_ = other.towns_.Clone();
      trees_ = other.trees_;
      stones_ = other.stones_;
      animals_ = other.animals_;
      plants_ = other.plants_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WorldMapChunk Clone() {
      return new WorldMapChunk(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private long x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private long y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 3;
    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 4;
    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 5;
    private static readonly pb::FieldCodec<float> _repeated_data_codec
        = pb::FieldCodec.ForFloat(42);
    private readonly pbc::RepeatedField<float> data_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Data {
      get { return data_; }
    }

    /// <summary>Field number for the "towns" field.</summary>
    public const int TownsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Gardarike.Town> _repeated_towns_codec
        = pb::FieldCodec.ForMessage(50, global::Gardarike.Town.Parser);
    private readonly pbc::RepeatedField<global::Gardarike.Town> towns_ = new pbc::RepeatedField<global::Gardarike.Town>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Gardarike.Town> Towns {
      get { return towns_; }
    }

    /// <summary>Field number for the "trees" field.</summary>
    public const int TreesFieldNumber = 7;
    private ulong trees_;
    /// <summary>
    ///  Chunk resources
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Trees {
      get { return trees_; }
      set {
        trees_ = value;
      }
    }

    /// <summary>Field number for the "stones" field.</summary>
    public const int StonesFieldNumber = 8;
    private ulong stones_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Stones {
      get { return stones_; }
      set {
        stones_ = value;
      }
    }

    /// <summary>Field number for the "animals" field.</summary>
    public const int AnimalsFieldNumber = 9;
    private ulong animals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Animals {
      get { return animals_; }
      set {
        animals_ = value;
      }
    }

    /// <summary>Field number for the "plants" field.</summary>
    public const int PlantsFieldNumber = 10;
    private ulong plants_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Plants {
      get { return plants_; }
      set {
        plants_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WorldMapChunk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WorldMapChunk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if(!data_.Equals(other.data_)) return false;
      if(!towns_.Equals(other.towns_)) return false;
      if (Trees != other.Trees) return false;
      if (Stones != other.Stones) return false;
      if (Animals != other.Animals) return false;
      if (Plants != other.Plants) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0L) hash ^= X.GetHashCode();
      if (Y != 0L) hash ^= Y.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      hash ^= data_.GetHashCode();
      hash ^= towns_.GetHashCode();
      if (Trees != 0UL) hash ^= Trees.GetHashCode();
      if (Stones != 0UL) hash ^= Stones.GetHashCode();
      if (Animals != 0UL) hash ^= Animals.GetHashCode();
      if (Plants != 0UL) hash ^= Plants.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(X);
      }
      if (Y != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Y);
      }
      if (Width != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Height);
      }
      data_.WriteTo(output, _repeated_data_codec);
      towns_.WriteTo(output, _repeated_towns_codec);
      if (Trees != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(Trees);
      }
      if (Stones != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(Stones);
      }
      if (Animals != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(Animals);
      }
      if (Plants != 0UL) {
        output.WriteRawTag(80);
        output.WriteUInt64(Plants);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(X);
      }
      if (Y != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Y);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      size += data_.CalculateSize(_repeated_data_codec);
      size += towns_.CalculateSize(_repeated_towns_codec);
      if (Trees != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Trees);
      }
      if (Stones != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Stones);
      }
      if (Animals != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Animals);
      }
      if (Plants != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Plants);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WorldMapChunk other) {
      if (other == null) {
        return;
      }
      if (other.X != 0L) {
        X = other.X;
      }
      if (other.Y != 0L) {
        Y = other.Y;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      data_.Add(other.data_);
      towns_.Add(other.towns_);
      if (other.Trees != 0UL) {
        Trees = other.Trees;
      }
      if (other.Stones != 0UL) {
        Stones = other.Stones;
      }
      if (other.Animals != 0UL) {
        Animals = other.Animals;
      }
      if (other.Plants != 0UL) {
        Plants = other.Plants;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            X = input.ReadInt64();
            break;
          }
          case 16: {
            Y = input.ReadInt64();
            break;
          }
          case 24: {
            Width = input.ReadInt32();
            break;
          }
          case 32: {
            Height = input.ReadInt32();
            break;
          }
          case 42:
          case 45: {
            data_.AddEntriesFrom(input, _repeated_data_codec);
            break;
          }
          case 50: {
            towns_.AddEntriesFrom(input, _repeated_towns_codec);
            break;
          }
          case 56: {
            Trees = input.ReadUInt64();
            break;
          }
          case 64: {
            Stones = input.ReadUInt64();
            break;
          }
          case 72: {
            Animals = input.ReadUInt64();
            break;
          }
          case 80: {
            Plants = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Town : pb::IMessage<Town> {
    private static readonly pb::MessageParser<Town> _parser = new pb::MessageParser<Town>(() => new Town());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Town> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Town() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Town(Town other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      name_ = other.name_;
      ownerName_ = other.ownerName_;
      population_ = other.population_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Town Clone() {
      return new Town(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private long x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private long y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ownerName" field.</summary>
    public const int OwnerNameFieldNumber = 4;
    private string ownerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OwnerName {
      get { return ownerName_; }
      set {
        ownerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "population" field.</summary>
    public const int PopulationFieldNumber = 5;
    private ulong population_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Population {
      get { return population_; }
      set {
        population_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Town);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Town other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Name != other.Name) return false;
      if (OwnerName != other.OwnerName) return false;
      if (Population != other.Population) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0L) hash ^= X.GetHashCode();
      if (Y != 0L) hash ^= Y.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (OwnerName.Length != 0) hash ^= OwnerName.GetHashCode();
      if (Population != 0UL) hash ^= Population.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(X);
      }
      if (Y != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Y);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (OwnerName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OwnerName);
      }
      if (Population != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(Population);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(X);
      }
      if (Y != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Y);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (OwnerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OwnerName);
      }
      if (Population != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Population);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Town other) {
      if (other == null) {
        return;
      }
      if (other.X != 0L) {
        X = other.X;
      }
      if (other.Y != 0L) {
        Y = other.Y;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.OwnerName.Length != 0) {
        OwnerName = other.OwnerName;
      }
      if (other.Population != 0UL) {
        Population = other.Population;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            X = input.ReadInt64();
            break;
          }
          case 16: {
            Y = input.ReadInt64();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            OwnerName = input.ReadString();
            break;
          }
          case 40: {
            Population = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Building : pb::IMessage<Building> {
    private static readonly pb::MessageParser<Building> _parser = new pb::MessageParser<Building>(() => new Building());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Building> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Building() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Building(Building other) : this() {
      id_ = other.id_;
      Location = other.location_ != null ? other.Location.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Building Clone() {
      return new Building(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Gardarike.Vector3D location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.Vector3D Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Building);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Building other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Location, other.Location)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Building other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          location_ = new global::Gardarike.Vector3D();
        }
        Location.MergeFrom(other.Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            if (location_ == null) {
              location_ = new global::Gardarike.Vector3D();
            }
            input.ReadMessage(location_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetLocalMapResponse : pb::IMessage<GetLocalMapResponse> {
    private static readonly pb::MessageParser<GetLocalMapResponse> _parser = new pb::MessageParser<GetLocalMapResponse>(() => new GetLocalMapResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLocalMapResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocalMapResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocalMapResponse(GetLocalMapResponse other) : this() {
      Map = other.map_ != null ? other.Map.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLocalMapResponse Clone() {
      return new GetLocalMapResponse(this);
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 1;
    private global::Gardarike.LocalMap map_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.LocalMap Map {
      get { return map_; }
      set {
        map_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLocalMapResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLocalMapResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Map, other.Map)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (map_ != null) hash ^= Map.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (map_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Map);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (map_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Map);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLocalMapResponse other) {
      if (other == null) {
        return;
      }
      if (other.map_ != null) {
        if (map_ == null) {
          map_ = new global::Gardarike.LocalMap();
        }
        Map.MergeFrom(other.Map);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (map_ == null) {
              map_ = new global::Gardarike.LocalMap();
            }
            input.ReadMessage(map_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetWorldMapResponse : pb::IMessage<GetWorldMapResponse> {
    private static readonly pb::MessageParser<GetWorldMapResponse> _parser = new pb::MessageParser<GetWorldMapResponse>(() => new GetWorldMapResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWorldMapResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorldMapResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorldMapResponse(GetWorldMapResponse other) : this() {
      Map = other.map_ != null ? other.Map.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorldMapResponse Clone() {
      return new GetWorldMapResponse(this);
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 1;
    private global::Gardarike.WorldMapChunk map_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Gardarike.WorldMapChunk Map {
      get { return map_; }
      set {
        map_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWorldMapResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWorldMapResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Map, other.Map)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (map_ != null) hash ^= Map.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (map_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Map);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (map_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Map);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWorldMapResponse other) {
      if (other == null) {
        return;
      }
      if (other.map_ != null) {
        if (map_ == null) {
          map_ = new global::Gardarike.WorldMapChunk();
        }
        Map.MergeFrom(other.Map);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (map_ == null) {
              map_ = new global::Gardarike.WorldMapChunk();
            }
            input.ReadMessage(map_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Character : pb::IMessage<Character> {
    private static readonly pb::MessageParser<Character> _parser = new pb::MessageParser<Character>(() => new Character());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Character> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Gardarike.ServerReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Character() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Character(Character other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      maxPopulation_ = other.maxPopulation_;
      currentPopulation_ = other.currentPopulation_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Character Clone() {
      return new Character(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maxPopulation" field.</summary>
    public const int MaxPopulationFieldNumber = 3;
    private ulong maxPopulation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MaxPopulation {
      get { return maxPopulation_; }
      set {
        maxPopulation_ = value;
      }
    }

    /// <summary>Field number for the "currentPopulation" field.</summary>
    public const int CurrentPopulationFieldNumber = 4;
    private ulong currentPopulation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CurrentPopulation {
      get { return currentPopulation_; }
      set {
        currentPopulation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Character);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Character other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (MaxPopulation != other.MaxPopulation) return false;
      if (CurrentPopulation != other.CurrentPopulation) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (MaxPopulation != 0UL) hash ^= MaxPopulation.GetHashCode();
      if (CurrentPopulation != 0UL) hash ^= CurrentPopulation.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (MaxPopulation != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MaxPopulation);
      }
      if (CurrentPopulation != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(CurrentPopulation);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (MaxPopulation != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MaxPopulation);
      }
      if (CurrentPopulation != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CurrentPopulation);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Character other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.MaxPopulation != 0UL) {
        MaxPopulation = other.MaxPopulation;
      }
      if (other.CurrentPopulation != 0UL) {
        CurrentPopulation = other.CurrentPopulation;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            MaxPopulation = input.ReadUInt64();
            break;
          }
          case 32: {
            CurrentPopulation = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
